DataMove {
  exists: true,
  name: 'Absorb',
  pp: 20,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  num: 71,
  accuracy: 100,
  basePower: 20,
  category: 'Special',
  priority: 0,
  drain: [ 1, 2 ],
  secondary: null,
  target: 'normal',
  type: 'Grass',
  contestType: 'Clever',
  desc: 'The user recovers 1/2 the HP lost by the target, rounded down.',
  shortDesc: 'User recovers 50% of the damage dealt.',
  id: 'absorb',
  fullname: 'move: Absorb',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Acid',
  secondary: { chance: 10, boosts: { def: -1 } },
  num: 51,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 30,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  target: 'allAdjacentFoes',
  type: 'Poison',
  contestType: 'Clever',
  desc: "Has a 10% chance to lower the target's Defense by 1 stage.",
  shortDesc: '10% chance to lower the foe(s) Defense by 1.',
  id: 'acid',
  fullname: 'move: Acid',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: [ { chance: 10, boosts: { def: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 70 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Ancient Power',
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  num: 246,
  accuracy: 100,
  basePower: 60,
  category: 'Physical',
  pp: 5,
  priority: 0,
  secondary: {
    chance: 10,
    self: { boosts: { atk: 1, def: 1, spa: 1, spd: 1, spe: 1 } }
  },
  target: 'normal',
  type: 'Rock',
  contestType: 'Tough',
  desc: "Has a 10% chance to raise the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.",
  shortDesc: '10% chance to raise all stats by 1 (not acc/eva).',
  id: 'ancientpower',
  fullname: 'move: Ancient Power',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Rock',
  secondaries: [
    {
      chance: 10,
      self: { boosts: { atk: 1, def: 1, spa: 1, spd: 1, spe: 1 } }
    }
  ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Assist',
  flags: { metronome: 1, noassist: 1, nosleeptalk: 1 },
  isNonstandard: null,
  num: 274,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  onHit: [Function: onHit],
  callsMove: true,
  secondary: null,
  target: 'self',
  type: 'Normal',
  contestType: 'Cute',
  desc: "A random move among those known by the user's party members is selected for use. Does not select Assist, Counter, Covet, Destiny Bond, Detect, Endure, Focus Punch, Follow Me, Helping Hand, Metronome, Mimic, Mirror Coat, Mirror Move, Protect, Sketch, Sleep Talk, Snatch, Struggle, Thief, or Trick.",
  shortDesc: 'Uses a random move known by a team member.',
  id: 'assist',
  fullname: 'move: Assist',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Astonish',
  basePowerCallback: [Function: basePowerCallback],
  num: 310,
  accuracy: 100,
  basePower: 30,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Ghost',
  contestType: 'Cute',
  desc: 'Has a 30% chance to make the target flinch. Damage doubles if the target has used Minimize while active.',
  shortDesc: '30% chance to make the target flinch.',
  id: 'astonish',
  fullname: 'move: Astonish',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Beat Up',
  onModifyMove: [Function: onModifyMove],
  condition: {
    duration: 1,
    onModifySpAPriority: -101,
    onModifySpA: [Function: onModifySpA],
    onFoeModifySpDPriority: -101,
    onFoeModifySpD: [Function: onFoeModifySpD]
  },
  basePower: 10,
  basePowerCallback: [Function: basePowerCallback],
  num: 251,
  accuracy: 100,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, allyanim: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Dark',
  contestType: 'Clever',
  desc: "Deals typeless damage. Hits one time for each unfainted Pokemon without a non-volatile status condition in the user's party, or fails if no Pokemon meet the criteria. For each hit, the damage formula uses the participating Pokemon's base Attack as the Attack stat, the target's base Defense as the Defense stat, and ignores stat stages and other effects that modify Attack or Defense; each hit is considered to come from the user.",
  shortDesc: 'All healthy allies aid in damaging the target.',
  id: 'beatup',
  fullname: 'move: Beat Up',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Bide',
  accuracy: 100,
  priority: 0,
  condition: {
    duration: 3,
    onLockMove: 'bide',
    onStart: [Function: onStart],
    onDamagePriority: -101,
    onDamage: [Function: onDamage],
    onBeforeMove: [Function: onBeforeMove],
    onMoveAborted: [Function: onMoveAborted],
    onEnd: [Function: onEnd]
  },
  isNonstandard: null,
  num: 117,
  basePower: 0,
  category: 'Physical',
  pp: 10,
  flags: {
    contact: 1,
    protect: 1,
    metronome: 1,
    nosleeptalk: 1,
    failinstruct: 1
  },
  volatileStatus: 'bide',
  ignoreImmunity: true,
  beforeMoveCallback: [Function: beforeMoveCallback],
  secondary: null,
  target: 'self',
  type: 'Normal',
  contestType: 'Tough',
  desc: "The user spends two turns locked into this move and then, on the second turn after using this move, the user attacks the last Pokemon that hit it, inflicting double the damage in HP it lost during the two turns. If the last Pokemon that hit it is no longer active, the user attacks a random opposing Pokemon instead. If the user is prevented from moving during this move's use, the effect ends. This move does not ignore type immunity.",
  shortDesc: 'Waits 2 turns; deals double the damage taken.',
  id: 'bide',
  fullname: 'move: Bide',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Blizzard',
  onModifyMove: [Function: onModifyMove],
  basePower: 120,
  num: 59,
  accuracy: 70,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, wind: 1 },
  secondary: { chance: 10, status: 'frz' },
  target: 'allAdjacentFoes',
  type: 'Ice',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to freeze the target.',
  shortDesc: '10% chance to freeze foe(s).',
  id: 'blizzard',
  fullname: 'move: Blizzard',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: [ { chance: 10, status: 'frz' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Brick Break',
  onTryHit: [Function: onTryHit],
  num: 280,
  accuracy: 100,
  basePower: 75,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: "If this attack does not miss and whether or not the target is immune, the effects of Reflect and Light Screen end for the opponent's side of the field before damage is calculated.",
  shortDesc: 'Destroys screens, even if the target is immune.',
  id: 'brickbreak',
  fullname: 'move: Brick Break',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Charge',
  boosts: null,
  condition: {
    onStart: [Function: onStart],
    onRestart: [Function: onRestart],
    onBasePowerPriority: 9,
    onBasePower: [Function: onBasePower],
    onMoveAborted: [Function: onMoveAborted],
    onAfterMove: [Function: onAfterMove],
    onEnd: [Function: onEnd]
  },
  num: 268,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  volatileStatus: 'charge',
  secondary: null,
  target: 'self',
  type: 'Electric',
  zMove: { boost: { spd: 1 } },
  contestType: 'Clever',
  desc: 'If the user uses an Electric-type attack on the next turn, its power will be doubled.',
  shortDesc: "The user's Electric attack next turn has 2x power.",
  id: 'charge',
  fullname: 'move: Charge',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Conversion',
  onHit: [Function: onHit],
  flags: { metronome: 1 },
  num: 160,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { atk: 1, def: 1, spa: 1, spd: 1, spe: 1 } },
  contestType: 'Beautiful',
  desc: "The user's type changes to match the original type of one of its known moves besides Curse, at random, but not either of its current types. Fails if the user cannot change its type, or if this move would only be able to select one of the user's current types.",
  shortDesc: "Changes user's type to match a known move.",
  id: 'conversion',
  fullname: 'move: Conversion',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Counter',
  condition: {
    duration: 1,
    noCopy: true,
    onStart: [Function: onStart],
    onRedirectTargetPriority: -1,
    onRedirectTarget: [Function: onRedirectTarget],
    onDamagePriority: -101,
    onDamage: [Function: onDamage]
  },
  num: 68,
  accuracy: 100,
  basePower: 0,
  damageCallback: [Function: damageCallback],
  category: 'Physical',
  pp: 20,
  priority: -5,
  flags: {
    contact: 1,
    protect: 1,
    failmefirst: 1,
    noassist: 1,
    failcopycat: 1
  },
  beforeTurnCallback: [Function: beforeTurnCallback],
  onTry: [Function: onTry],
  secondary: null,
  target: 'scripted',
  type: 'Fighting',
  maxMove: { basePower: 75 },
  contestType: 'Tough',
  desc: "Deals damage to the last opposing Pokemon to hit the user with a physical attack this turn equal to twice the HP lost by the user from that attack. If that opposing Pokemon's position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. This move considers Hidden Power as Normal type, and only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon's physical attack this turn, or if the user did not lose HP from the attack.",
  shortDesc: 'If hit by physical attack, returns double damage.',
  id: 'counter',
  fullname: 'move: Counter',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Covet',
  flags: { protect: 1, mirror: 1, noassist: 1 },
  basePower: 40,
  pp: 40,
  num: 343,
  accuracy: 100,
  category: 'Physical',
  priority: 0,
  onAfterHit: [Function: onAfterHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: "If this attack was successful and the user has not fainted, it steals the target's held item if the user is not holding one. The target's item is not stolen if it is a Mail or Enigma Berry. Items lost to this move cannot be regained with Recycle.",
  shortDesc: "If the user has no item, it steals the target's.",
  id: 'covet',
  fullname: 'move: Covet',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Crunch',
  secondary: { chance: 20, boosts: { spd: -1 } },
  num: 242,
  accuracy: 100,
  basePower: 80,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1 },
  target: 'normal',
  type: 'Dark',
  contestType: 'Tough',
  desc: "Has a 20% chance to lower the target's Special Defense by 1 stage.",
  shortDesc: "20% chance to lower the target's Sp. Def by 1.",
  id: 'crunch',
  fullname: 'move: Crunch',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: [ { chance: 20, boosts: { spd: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Dig',
  basePower: 60,
  flags: {
    contact: 1,
    charge: 1,
    protect: 1,
    mirror: 1,
    nonsky: 1,
    metronome: 1,
    nosleeptalk: 1
  },
  num: 91,
  accuracy: 100,
  category: 'Physical',
  pp: 10,
  priority: 0,
  onTryMove: [Function: onTryMove],
  condition: {
    duration: 2,
    onImmunity: [Function: onImmunity],
    onInvulnerability: [Function: onInvulnerability],
    onSourceModifyDamage: [Function: onSourceModifyDamage]
  },
  secondary: null,
  target: 'normal',
  type: 'Ground',
  contestType: 'Tough',
  desc: 'This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Earthquake and Magnitude, which have doubled power when used against it, and is also unaffected by weather.',
  shortDesc: 'Digs underground turn 1, strikes turn 2.',
  id: 'dig',
  fullname: 'move: Dig',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Disable',
  accuracy: 55,
  flags: { protect: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  volatileStatus: 'disable',
  condition: {
    durationCallback: [Function: durationCallback],
    noCopy: true,
    onStart: [Function: onStart],
    onEnd: [Function: onEnd],
    onBeforeMove: [Function: onBeforeMove],
    onDisableMove: [Function: onDisableMove]
  },
  num: 50,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  onTryHit: [Function: onTryHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Clever',
  desc: "For 2 to 5 turns, the target's last move used becomes disabled. Fails if one of the target's moves is already disabled, if the target has not made a move, if the target no longer knows the move, or if the move has 0 PP.",
  shortDesc: "For 2-5 turns, disables the target's last move.",
  id: 'disable',
  fullname: 'move: Disable',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Dive',
  basePower: 60,
  flags: {
    contact: 1,
    charge: 1,
    protect: 1,
    mirror: 1,
    nonsky: 1,
    metronome: 1,
    nosleeptalk: 1
  },
  num: 291,
  accuracy: 100,
  category: 'Special',
  pp: 10,
  priority: 0,
  onTryMove: [Function: onTryMove],
  condition: {
    duration: 2,
    onImmunity: [Function: onImmunity],
    onInvulnerability: [Function: onInvulnerability],
    onSourceModifyDamage: [Function: onSourceModifyDamage]
  },
  secondary: null,
  target: 'normal',
  type: 'Water',
  contestType: 'Beautiful',
  desc: 'This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Surf and Whirlpool, which have doubled power when used against it, and is also unaffected by weather.',
  shortDesc: 'Dives underwater turn 1, strikes turn 2.',
  id: 'dive',
  fullname: 'move: Dive',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Doom Desire',
  onTry: [Function: onTry],
  accuracy: 85,
  basePower: 120,
  num: 353,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { metronome: 1, futuremove: 1 },
  secondary: null,
  target: 'normal',
  type: 'Steel',
  contestType: 'Beautiful',
  desc: "Deals typeless damage that cannot be a critical hit two turns after this move is used. Damage is calculated against the target on use, and at the end of the final turn that damage is dealt to the Pokemon at the position the original target had at the time. Fails if this move or Future Sight is already in effect for the target's position.",
  shortDesc: 'Hits two turns after being used.',
  id: 'doomdesire',
  fullname: 'move: Doom Desire',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Steel',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Encore',
  volatileStatus: 'encore',
  condition: {
    durationCallback: [Function: durationCallback],
    onStart: [Function: onStart],
    onOverrideAction: [Function: onOverrideAction],
    onResidualOrder: 10,
    onResidualSubOrder: 14,
    onResidual: [Function: onResidual],
    onEnd: [Function: onEnd],
    onDisableMove: [Function: onDisableMove]
  },
  flags: { protect: 1, mirror: 1, bypasssub: 1, metronome: 1, failencore: 1 },
  num: 227,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Cute',
  desc: 'For 3 to 6 turns, the target is forced to repeat its last move used. If the affected move runs out of PP, the effect ends. Fails if the target is already under this effect, if it has not made a move, if the move has 0 PP, or if the move is Encore, Mimic, Mirror Move, Sketch, Struggle, or Transform.',
  shortDesc: 'The target repeats its last move for 3-6 turns.',
  id: 'encore',
  fullname: 'move: Encore',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Extrasensory',
  basePowerCallback: [Function: basePowerCallback],
  pp: 30,
  num: 326,
  accuracy: 100,
  basePower: 80,
  category: 'Special',
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Psychic',
  contestType: 'Cool',
  desc: 'Has a 10% chance to make the target flinch. Damage doubles if the target has used Minimize while active.',
  shortDesc: '10% chance to make the target flinch.',
  id: 'extrasensory',
  fullname: 'move: Extrasensory',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: [ { chance: 10, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Fake Out',
  flags: { protect: 1, mirror: 1, metronome: 1 },
  priority: 1,
  num: 252,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 10,
  onTry: [Function: onTry],
  secondary: { chance: 100, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: "Has a 100% chance to make the target flinch. Fails unless it is the user's first turn on the field.",
  shortDesc: 'Hits first. First turn out only. 100% flinch chance.',
  id: 'fakeout',
  fullname: 'move: Fake Out',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 100, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Feint Attack',
  flags: { protect: 1, mirror: 1, metronome: 1 },
  isNonstandard: null,
  num: 185,
  accuracy: true,
  basePower: 60,
  category: 'Special',
  pp: 20,
  priority: 0,
  secondary: null,
  target: 'normal',
  type: 'Dark',
  contestType: 'Clever',
  desc: 'This move does not check accuracy.',
  shortDesc: 'This move does not check accuracy.',
  id: 'feintattack',
  fullname: 'move: Feint Attack',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Flail',
  basePowerCallback: [Function: basePowerCallback],
  num: 175,
  accuracy: 100,
  basePower: 0,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { basePower: 160 },
  maxMove: { basePower: 130 },
  contestType: 'Cute',
  desc: "The power of this move is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1, where X is equal to (user's current HP * 48 / user's maximum HP), rounded down.",
  shortDesc: 'More power the less HP the user has left.',
  id: 'flail',
  fullname: 'move: Flail',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Flash',
  accuracy: 70,
  isNonstandard: null,
  num: 148,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  boosts: { accuracy: -1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { evasion: 1 } },
  contestType: 'Beautiful',
  desc: "Lowers the target's accuracy by 1 stage.",
  shortDesc: "Lowers the target's accuracy by 1.",
  id: 'flash',
  fullname: 'move: Flash',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Fly',
  basePower: 70,
  flags: {
    contact: 1,
    charge: 1,
    protect: 1,
    mirror: 1,
    gravity: 1,
    distance: 1,
    metronome: 1
  },
  onTryMove: [Function: onTryMove],
  num: 19,
  accuracy: 95,
  category: 'Physical',
  pp: 15,
  priority: 0,
  condition: {
    duration: 2,
    onInvulnerability: [Function: onInvulnerability],
    onSourceModifyDamage: [Function: onSourceModifyDamage]
  },
  secondary: null,
  target: 'any',
  type: 'Flying',
  contestType: 'Clever',
  desc: 'This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Gust, Sky Uppercut, Thunder, and Twister, and Gust and Twister have doubled power when used against it.',
  shortDesc: 'Flies up on first turn, then strikes the next turn.',
  id: 'fly',
  fullname: 'move: Fly',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Follow Me',
  volatileStatus: undefined,
  slotCondition: 'followme',
  condition: {
    duration: 1,
    onStart: [Function: onStart],
    onFoeRedirectTargetPriority: 1,
    onFoeRedirectTarget: [Function: onFoeRedirectTarget]
  },
  priority: 3,
  num: 266,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  flags: { noassist: 1, failcopycat: 1 },
  onTry: [Function: onTry],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: 'Until the end of the turn, all single-target attacks from the opposing side are redirected to the user. Such attacks are redirected to the user before they can be reflected by Magic Coat, or drawn in by the Lightning Rod Ability. This effect remains active even if the user leaves the field. Fails if it is not a Double Battle.',
  shortDesc: "The foes' moves target the user on the turn used.",
  id: 'followme',
  fullname: 'move: Follow Me',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Foresight',
  accuracy: 100,
  flags: { protect: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  isNonstandard: null,
  num: 193,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  volatileStatus: 'foresight',
  onTryHit: [Function: onTryHit],
  condition: {
    noCopy: true,
    onStart: [Function: onStart],
    onNegateImmunity: [Function: onNegateImmunity],
    onModifyBoost: [Function: onModifyBoost]
  },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { effect: 'crit2' },
  contestType: 'Clever',
  desc: 'As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it, and Normal- and Fighting-type attacks can hit the target if it is a Ghost type.',
  shortDesc: 'Fighting, Normal hit Ghost. Evasiveness ignored.',
  id: 'foresight',
  fullname: 'move: Foresight',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Fury Cutter',
  onHit: [Function: onHit],
  basePower: 10,
  condition: {
    duration: 2,
    onStart: [Function: onStart],
    onRestart: [Function: onRestart]
  },
  num: 210,
  accuracy: 95,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1 },
  secondary: null,
  target: 'normal',
  type: 'Bug',
  contestType: 'Cool',
  desc: 'Power doubles with each successful hit, up to a maximum of 160 power. The power is reset if this move misses or another move is used.',
  shortDesc: 'Power doubles with each hit, up to 160.',
  id: 'furycutter',
  fullname: 'move: Fury Cutter',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Giga Drain',
  pp: 5,
  basePower: 60,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  num: 202,
  accuracy: 100,
  category: 'Special',
  priority: 0,
  drain: [ 1, 2 ],
  secondary: null,
  target: 'normal',
  type: 'Grass',
  contestType: 'Clever',
  desc: 'The user recovers 1/2 the HP lost by the target, rounded down.',
  shortDesc: 'User recovers 50% of the damage dealt.',
  id: 'gigadrain',
  fullname: 'move: Giga Drain',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Glare',
  ignoreImmunity: false,
  accuracy: 75,
  num: 137,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  status: 'par',
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spd: 1 } },
  contestType: 'Tough',
  desc: 'Paralyzes the target. This move does not ignore type immunity.',
  shortDesc: 'Paralyzes the target.',
  id: 'glare',
  fullname: 'move: Glare',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Hidden Power',
  category: 'Physical',
  onModifyMove: [Function: onModifyMove],
  basePower: 0,
  basePowerCallback: [Function: basePowerCallback],
  isNonstandard: null,
  num: 237,
  accuracy: 100,
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  onModifyType: [Function: onModifyType],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Clever',
  desc: "This move's type and power depend on the user's individual values (IVs). Power varies between 30 and 70, and type can be any but Normal.",
  shortDesc: "Varies in power and type based on the user's IVs.",
  id: 'hiddenpower',
  fullname: 'move: Hidden Power',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'High Jump Kick',
  basePower: 85,
  onMoveFail: [Function: onMoveFail],
  pp: 20,
  num: 136,
  accuracy: 90,
  category: 'Physical',
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, gravity: 1, metronome: 1 },
  hasCrashDamage: true,
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: "If this attack is not successful and the target was not immune, the user loses HP equal to half of the damage the target would have taken, rounded down, but no less than 1 HP and no more than half of the target's maximum HP, as crash damage.",
  shortDesc: "If miss, user takes 1/2 damage it would've dealt.",
  id: 'highjumpkick',
  fullname: 'move: High Jump Kick',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Hypnosis',
  accuracy: 60,
  num: 95,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  status: 'slp',
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  zMove: { boost: { spe: 1 } },
  contestType: 'Clever',
  desc: 'Causes the target to fall asleep.',
  shortDesc: 'Causes the target to fall asleep.',
  id: 'hypnosis',
  fullname: 'move: Hypnosis',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Jump Kick',
  basePower: 70,
  onMoveFail: [Function: onMoveFail],
  pp: 25,
  isNonstandard: null,
  num: 26,
  accuracy: 95,
  category: 'Physical',
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, gravity: 1, metronome: 1 },
  hasCrashDamage: true,
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: "If this attack is not successful and the target was not immune, the user loses HP equal to half of the damage the target would have taken, rounded down, but no less than 1 HP and no more than half of the target's maximum HP, as crash damage.",
  shortDesc: "If miss, user takes 1/2 damage it would've dealt.",
  id: 'jumpkick',
  fullname: 'move: Jump Kick',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 85 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Leaf Blade',
  basePower: 70,
  num: 348,
  accuracy: 100,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1 },
  critRatio: 2,
  secondary: null,
  target: 'normal',
  type: 'Grass',
  contestType: 'Cool',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio.',
  id: 'leafblade',
  fullname: 'move: Leaf Blade',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Lock-On',
  accuracy: 100,
  condition: {
    duration: 2,
    onSourceInvulnerabilityPriority: 1,
    onSourceInvulnerability: [Function: onSourceInvulnerability],
    onSourceAccuracy: [Function: onSourceAccuracy]
  },
  num: 199,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  onTryHit: [Function: onTryHit],
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Clever',
  desc: "Until the end of the next turn, the target cannot avoid the user's moves, even if the target is in the middle of a two-turn move. When this effect is started against the target, this and Mind Reader's effects end for every other Pokemon against that target. If the target leaves the field using Baton Pass, the replacement remains under this effect. If the user leaves the field using Baton Pass, this effect is restarted against the same target for the replacement. The effect ends if either the user or the target leaves the field.",
  shortDesc: "User's next move will not miss the target.",
  id: 'lockon',
  fullname: 'move: Lock-On',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Mega Drain',
  pp: 10,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  num: 72,
  accuracy: 100,
  basePower: 40,
  category: 'Special',
  priority: 0,
  drain: [ 1, 2 ],
  secondary: null,
  target: 'normal',
  type: 'Grass',
  zMove: { basePower: 120 },
  contestType: 'Clever',
  desc: 'The user recovers 1/2 the HP lost by the target, rounded down.',
  shortDesc: 'User recovers 50% of the damage dealt.',
  id: 'megadrain',
  fullname: 'move: Mega Drain',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 }
},
DataMove {
  exists: true,
  name: 'Memento',
  accuracy: true,
  num: 262,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  boosts: { atk: -2, spa: -2 },
  selfdestruct: 'ifHit',
  secondary: null,
  target: 'normal',
  type: 'Dark',
  zMove: { effect: 'healreplacement' },
  contestType: 'Tough',
  desc: "Lowers the target's Attack and Special Attack by 2 stages. The user faints. This move does not check accuracy, and can hit targets in the middle of a two-turn move. Fails entirely if the target's Attack and Special Attack stat stages are both -6.",
  shortDesc: "Lowers target's Attack, Sp. Atk by 2. User faints.",
  id: 'memento',
  fullname: 'move: Memento',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Mind Reader',
  accuracy: 100,
  isNonstandard: null,
  num: 170,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  onTryHit: [Function: onTryHit],
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spa: 1 } },
  contestType: 'Clever',
  desc: "Until the end of the next turn, the target cannot avoid the user's moves, even if the target is in the middle of a two-turn move. When this effect is started against the target, this and Lock-On's effects end for every other Pokemon against that target. If the target leaves the field using Baton Pass, the replacement remains under this effect. If the user leaves the field using Baton Pass, this effect is restarted against the same target for the replacement. The effect ends if either the user or the target leaves the field.",
  shortDesc: "User's next move will not miss the target.",
  id: 'mindreader',
  fullname: 'move: Mind Reader',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Mimic',
  flags: {
    protect: 1,
    bypasssub: 1,
    allyanim: 1,
    failencore: 1,
    noassist: 1,
    failmimic: 1
  },
  onHit: [Function: onHit],
  num: 102,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { accuracy: 1 } },
  contestType: 'Cute',
  desc: 'While the user remains active, this move is replaced by the last move used by the target. The copied move has 5 PP. Fails if the target has not made a move, if the user has Transformed, if the user already knows the move, or if the move is Metronome, Mimic, Sketch, or Struggle.',
  shortDesc: 'The last move the target used replaces this one.',
  id: 'mimic',
  fullname: 'move: Mimic',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Mirror Coat',
  condition: {
    duration: 1,
    noCopy: true,
    onStart: [Function: onStart],
    onRedirectTargetPriority: -1,
    onRedirectTarget: [Function: onRedirectTarget],
    onDamagePriority: -101,
    onDamage: [Function: onDamage]
  },
  flags: { protect: 1, failmefirst: 1, noassist: 1, failcopycat: 1 },
  num: 243,
  accuracy: 100,
  basePower: 0,
  damageCallback: [Function: damageCallback],
  category: 'Special',
  pp: 20,
  priority: -5,
  beforeTurnCallback: [Function: beforeTurnCallback],
  onTry: [Function: onTry],
  secondary: null,
  target: 'scripted',
  type: 'Psychic',
  contestType: 'Beautiful',
  desc: "Deals damage to the last opposing Pokemon to hit the user with a special attack this turn equal to twice the HP lost by the user from that attack. If that opposing Pokemon's position is no longer in use and there is another opposing Pokemon on the field, the damage is done to it instead. This move considers Hidden Power as Normal type, and only the last hit of a multi-hit attack is counted. Fails if the user was not hit by an opposing Pokemon's special attack this turn, or if the user did not lose HP from the attack.",
  shortDesc: 'If hit by special attack, returns double damage.',
  id: 'mirrorcoat',
  fullname: 'move: Mirror Coat',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Mirror Move',
  flags: { metronome: 1, failencore: 1, nosleeptalk: 1, noassist: 1 },
  onTryHit: [Function: onTryHit],
  onHit: [Function: onHit],
  target: 'self',
  isNonstandard: null,
  num: 119,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  callsMove: true,
  secondary: null,
  type: 'Flying',
  zMove: { boost: { atk: 2 } },
  contestType: 'Clever',
  desc: 'The user uses the last move that successfully targeted the user. The copied move is used with no specific target. Fails if no move has targeted the user, if the move missed, failed, or had no effect on the user, or if the move cannot be copied by this move.',
  shortDesc: "User uses the target's last used move against it.",
  id: 'mirrormove',
  fullname: 'move: Mirror Move',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Nature Power',
  accuracy: 95,
  onHit: [Function: onHit],
  flags: { metronome: 1 },
  onTryHit: [Function: onTryHit],
  target: 'self',
  isNonstandard: null,
  num: 267,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  callsMove: true,
  secondary: null,
  type: 'Normal',
  contestType: 'Beautiful',
  desc: 'This move calls another move for use depending on the battle terrain. Swift in Wi-Fi battles.',
  shortDesc: 'Attack changes based on terrain. (Swift)',
  id: 'naturepower',
  fullname: 'move: Nature Power',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Needle Arm',
  basePowerCallback: [Function: basePowerCallback],
  isNonstandard: null,
  num: 302,
  accuracy: 100,
  basePower: 60,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Grass',
  contestType: 'Clever',
  desc: 'Has a 30% chance to make the target flinch. Damage doubles if the target has used Minimize while active.',
  shortDesc: '30% chance to make the target flinch.',
  id: 'needlearm',
  fullname: 'move: Needle Arm',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Nightmare',
  accuracy: true,
  condition: {
    noCopy: true,
    onStart: [Function: onStart],
    onResidualOrder: 10,
    onResidualSubOrder: 7,
    onResidual: [Function: onResidual]
  },
  isNonstandard: null,
  num: 171,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'nightmare',
  secondary: null,
  target: 'normal',
  type: 'Ghost',
  zMove: { boost: { spa: 1 } },
  contestType: 'Clever',
  desc: 'Causes the target to lose 1/4 of its maximum HP, rounded down, at the end of each turn as long as it is asleep. This move does not affect the target unless it is asleep. The effect ends when the target wakes up, even if it falls asleep again in the same turn.',
  shortDesc: 'A sleeping target is hurt by 1/4 max HP per turn.',
  id: 'nightmare',
  fullname: 'move: Nightmare',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Odor Sleuth',
  accuracy: 100,
  flags: { protect: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  isNonstandard: null,
  num: 316,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  volatileStatus: 'foresight',
  onTryHit: [Function: onTryHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { atk: 1 } },
  contestType: 'Clever',
  desc: 'As long as the target remains active, its evasiveness stat stage is ignored during accuracy checks against it, and Normal- and Fighting-type attacks can hit the target if it is a Ghost type.',
  shortDesc: 'Fighting, Normal hit Ghost. Evasiveness ignored.',
  id: 'odorsleuth',
  fullname: 'move: Odor Sleuth',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Outrage',
  basePower: 90,
  pp: 15,
  onAfterMove: [Function: onAfterMove],
  num: 200,
  accuracy: 100,
  category: 'Special',
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, failinstruct: 1 },
  self: { volatileStatus: 'lockedmove' },
  secondary: null,
  target: 'randomNormal',
  type: 'Dragon',
  contestType: 'Cool',
  desc: 'The user spends two or three turns locked into this move and becomes confused at the end of the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, falls asleep, becomes frozen, or the attack is not successful against the target, the effect ends without causing confusion. If this move is called by Sleep Talk, the move is used for one turn and does not confuse the user.',
  shortDesc: 'Lasts 2-3 turns. Confuses the user afterwards.',
  id: 'outrage',
  fullname: 'move: Outrage',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dragon',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Overheat',
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  basePower: 140,
  num: 315,
  accuracy: 90,
  category: 'Special',
  pp: 5,
  priority: 0,
  self: { boosts: { spa: -2 } },
  secondary: null,
  target: 'normal',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: "Lowers the user's Special Attack by 2 stages.",
  shortDesc: "Lowers the user's Sp. Atk by 2.",
  id: 'overheat',
  fullname: 'move: Overheat',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Petal Dance',
  basePower: 70,
  pp: 20,
  onAfterMove: [Function: onAfterMove],
  num: 80,
  accuracy: 100,
  category: 'Special',
  priority: 0,
  flags: {
    contact: 1,
    protect: 1,
    mirror: 1,
    dance: 1,
    metronome: 1,
    failinstruct: 1
  },
  self: { volatileStatus: 'lockedmove' },
  secondary: null,
  target: 'randomNormal',
  type: 'Grass',
  contestType: 'Beautiful',
  desc: 'The user spends two or three turns locked into this move and becomes confused at the end of the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, falls asleep, becomes frozen, or the attack is not successful against the target, the effect ends without causing confusion. If this move is called by Sleep Talk, the move is used for one turn and does not confuse the user.',
  shortDesc: 'Lasts 2-3 turns. Confuses the user afterwards.',
  id: 'petaldance',
  fullname: 'move: Petal Dance',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Recover',
  pp: 20,
  num: 105,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  heal: [ 1, 2 ],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Clever',
  desc: 'The user restores 1/2 of its maximum HP, rounded down.',
  shortDesc: 'Heals the user by 50% of its max HP.',
  id: 'recover',
  fullname: 'move: Recover',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Reversal',
  basePowerCallback: [Function: basePowerCallback],
  num: 179,
  accuracy: 100,
  basePower: 0,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  zMove: { basePower: 160 },
  contestType: 'Cool',
  desc: "The power of this move is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1, where X is equal to (user's current HP * 48 / user's maximum HP), rounded down.",
  shortDesc: 'More power the less HP the user has left.',
  id: 'reversal',
  fullname: 'move: Reversal',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Rock Smash',
  basePower: 20,
  num: 249,
  accuracy: 100,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 50, boosts: { def: -1 } },
  target: 'normal',
  type: 'Fighting',
  contestType: 'Tough',
  desc: "Has a 50% chance to lower the target's Defense by 1 stage.",
  shortDesc: "50% chance to lower the target's Defense by 1.",
  id: 'rocksmash',
  fullname: 'move: Rock Smash',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: [ { chance: 50, boosts: { def: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 70 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Sketch',
  flags: {
    bypasssub: 1,
    failencore: 1,
    noassist: 1,
    failmimic: 1,
    nosketch: 1
  },
  onHit: [Function: onHit],
  isNonstandard: null,
  num: 166,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 1,
  noPPBoosts: true,
  priority: 0,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { atk: 1, def: 1, spa: 1, spd: 1, spe: 1 } },
  contestType: 'Clever',
  desc: 'This move is permanently replaced by the last move used by the target. The copied move has the maximum PP for that move. Fails if the target has not made a move, if the user has Transformed, or if the move is Sketch, Struggle, or any move the user knows.',
  shortDesc: 'Permanently copies the last move target used.',
  id: 'sketch',
  fullname: 'move: Sketch',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Sleep Talk',
  onHit: [Function: onHit],
  onTryHit: [Function: onTryHit],
  flags: { nosleeptalk: 1, noassist: 1, failcopycat: 1 },
  num: 214,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  sleepUsable: true,
  onTry: [Function: onTry],
  callsMove: true,
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'crit2' },
  contestType: 'Cute',
  desc: "One of the user's known moves, besides this move, is selected for use at random. Fails if the user is not asleep. The selected move does not have PP deducted from it, but if it currently has 0 PP it will fail to be used. This move cannot select Assist, Bide, Focus Punch, Metronome, Mirror Move, Sleep Talk, Uproar, or any two-turn move.",
  shortDesc: 'User must be asleep. Uses another known move.',
  id: 'sleeptalk',
  fullname: 'move: Sleep Talk',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Spite',
  onHit: [Function: onHit],
  flags: { protect: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  num: 180,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  secondary: null,
  target: 'normal',
  type: 'Ghost',
  zMove: { effect: 'heal' },
  contestType: 'Tough',
  desc: "Causes the target's last move used to lose 2 to 5 PP, at random. Fails if the target has not made a move, if the move has 0 or 1 PP, or if it no longer knows the move.",
  shortDesc: "Lowers the PP of the target's last move by 2-5.",
  id: 'spite',
  fullname: 'move: Spite',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Stockpile',
  pp: 10,
  condition: {
    noCopy: true,
    onStart: [Function: onStart],
    onRestart: [Function: onRestart],
    onEnd: [Function: onEnd]
  },
  num: 254,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  onTry: [Function: onTry],
  volatileStatus: 'stockpile',
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'heal' },
  contestType: 'Tough',
  desc: "The user's Stockpile count increases by 1. Fails if the user's Stockpile count is 3. The user's Stockpile count is reset to 0 when it is no longer active.",
  shortDesc: "Raises user's Stockpile count by 1. Max 3 uses.",
  id: 'stockpile',
  fullname: 'move: Stockpile',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Struggle',
  flags: {
    contact: 1,
    protect: 1,
    noassist: 1,
    failencore: 1,
    failmimic: 1,
    nosketch: 1
  },
  accuracy: 100,
  recoil: [ 1, 4 ],
  struggleRecoil: false,
  onModifyMove: [Function: onModifyMove],
  num: 165,
  basePower: 50,
  category: 'Physical',
  pp: 1,
  noPPBoosts: true,
  priority: 0,
  secondary: null,
  target: 'randomNormal',
  type: 'Normal',
  contestType: 'Tough',
  desc: "Deals typeless damage to a random opposing Pokemon. If this move was successful, the user takes damage equal to 1/4 the HP lost by the target, rounded down, but not less than 1 HP, and the Rock Head Ability does not prevent this. This move is automatically used if none of the user's known moves can be selected.",
  shortDesc: 'User loses 1/4 the HP lost by the target.',
  id: 'struggle',
  fullname: 'move: Struggle',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Surf',
  target: 'allAdjacentFoes',
  basePower: 95,
  num: 57,
  accuracy: 100,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  secondary: null,
  type: 'Water',
  contestType: 'Beautiful',
  desc: 'Power doubles if the target is using Dive.',
  shortDesc: 'Hits foes. Power doubles against Dive.',
  id: 'surf',
  fullname: 'move: Surf',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Taunt',
  flags: { protect: 1, bypasssub: 1, metronome: 1 },
  condition: {
    duration: 2,
    onStart: [Function: onStart],
    onResidualOrder: 10,
    onResidualSubOrder: 15,
    onEnd: [Function: onEnd],
    onDisableMove: [Function: onDisableMove],
    onBeforeMove: [Function: onBeforeMove]
  },
  num: 269,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  volatileStatus: 'taunt',
  secondary: null,
  target: 'normal',
  type: 'Dark',
  zMove: { boost: { atk: 1 } },
  contestType: 'Clever',
  desc: 'For 2 turns, prevents the target from using non-damaging moves.',
  shortDesc: "For 2 turns, the target can't use status moves.",
  id: 'taunt',
  fullname: 'move: Taunt',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Teeter Dance',
  flags: { protect: 1, metronome: 1 },
  num: 298,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  volatileStatus: 'confusion',
  secondary: null,
  target: 'allAdjacent',
  type: 'Normal',
  zMove: { boost: { spa: 1 } },
  contestType: 'Cute',
  desc: 'Causes the target to become confused.',
  shortDesc: 'Confuses adjacent Pokemon.',
  id: 'teeterdance',
  fullname: 'move: Teeter Dance',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Tickle',
  flags: { protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  num: 321,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  boosts: { atk: -1, def: -1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { def: 1 } },
  contestType: 'Cute',
  desc: "Lowers the target's Attack and Defense by 1 stage.",
  shortDesc: "Lowers the target's Attack and Defense by 1.",
  id: 'tickle',
  fullname: 'move: Tickle',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Uproar',
  condition: {
    onStart: [Function: onStart],
    onResidual: [Function: onResidual],
    onResidualOrder: 10,
    onResidualSubOrder: 11,
    onEnd: [Function: onEnd],
    onLockMove: 'uproar',
    onAnySetStatus: [Function: onAnySetStatus]
  },
  basePower: 50,
  flags: { protect: 1, mirror: 1, sound: 1, metronome: 1, nosleeptalk: 1 },
  num: 253,
  accuracy: 100,
  category: 'Physical',
  pp: 10,
  priority: 0,
  self: { volatileStatus: 'uproar' },
  onTryHit: [Function: onTryHit],
  secondary: null,
  target: 'randomNormal',
  type: 'Normal',
  contestType: 'Cute',
  desc: 'The user spends two to five turns locked into this move. This move targets an opposing Pokemon at random on each turn. During effect, no active Pokemon can fall asleep by any means, and Pokemon that are already asleep wake up as their turn starts or at the end of each turn, including the last one. If the user is prevented from moving or the attack is not successful against the target during one of the turns, the effect ends.',
  shortDesc: 'Lasts 2-5 turns. Active Pokemon cannot sleep.',
  id: 'uproar',
  fullname: 'move: Uproar',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Vine Whip',
  pp: 10,
  basePower: 35,
  num: 22,
  accuracy: 100,
  category: 'Special',
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Grass',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'vinewhip',
  fullname: 'move: Vine Whip',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Volt Tackle',
  secondary: null,
  recoil: [ 1, 3 ],
  num: 344,
  accuracy: 100,
  basePower: 120,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: 'If the target lost HP, the user takes recoil damage equal to 1/3 the HP lost by the target, rounded down, but not less than 1 HP.',
  shortDesc: 'Has 1/3 recoil.',
  id: 'volttackle',
  fullname: 'move: Volt Tackle',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Waterfall',
  secondary: null,
  num: 127,
  accuracy: 100,
  basePower: 80,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  target: 'normal',
  type: 'Water',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'waterfall',
  fullname: 'move: Waterfall',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Weather Ball',
  onModifyMove: [Function: onModifyMove],
  num: 311,
  accuracy: 100,
  basePower: 50,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  onModifyType: [Function: onModifyType],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { basePower: 160 },
  maxMove: { basePower: 130 },
  contestType: 'Beautiful',
  desc: "Damage doubles if a weather condition is active, and this move's type changes to match. Ice type during Hail, Water type during Rain Dance, Rock type during Sandstorm, and Fire type during Sunny Day.",
  shortDesc: 'Damage doubles and type varies during weather.',
  id: 'weatherball',
  fullname: 'move: Weather Ball',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Zap Cannon',
  basePower: 100,
  num: 192,
  accuracy: 50,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  secondary: { chance: 100, status: 'par' },
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: 'Has a 100% chance to paralyze the target.',
  shortDesc: '100% chance to paralyze the target.',
  id: 'zapcannon',
  fullname: 'move: Zap Cannon',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: [ { chance: 100, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Aromatherapy',
  onHit: [Function: onHit],
  isNonstandard: null,
  num: 312,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { snatch: 1, distance: 1, metronome: 1 },
  target: 'allyTeam',
  type: 'Grass',
  zMove: { effect: 'heal' },
  contestType: 'Clever',
  desc: "Every Pokemon in the user's party is cured of its non-volatile status condition.",
  shortDesc: "Cures the user's party of all status conditions.",
  id: 'aromatherapy',
  fullname: 'move: Aromatherapy',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondary: null,
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Bind',
  accuracy: 75,
  num: 20,
  basePower: 15,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'partiallytrapped',
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'Prevents the target from switching for two to five turns. Causes damage to the target equal to 1/16 of its maximum HP, rounded down, at the end of each turn during effect. The target can still switch out if it uses Baton Pass. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',
  shortDesc: 'Traps and damages the target for 2-5 turns.',
  id: 'bind',
  fullname: 'move: Bind',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Bone Rush',
  accuracy: 80,
  num: 198,
  basePower: 25,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Ground',
  zMove: { basePower: 140 },
  maxMove: { basePower: 130 },
  contestType: 'Tough',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'bonerush',
  fullname: 'move: Bone Rush',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Bullet Seed',
  basePower: 10,
  num: 331,
  accuracy: 100,
  category: 'Special',
  pp: 30,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Grass',
  zMove: { basePower: 140 },
  maxMove: { basePower: 130 },
  contestType: 'Cool',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'bulletseed',
  fullname: 'move: Bullet Seed',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Camouflage',
  onHit: [Function: onHit],
  isNonstandard: null,
  num: 293,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { evasion: 1 } },
  contestType: 'Clever',
  desc: "The user's type changes based on the battle terrain. Normal type on the regular Wi-Fi terrain. Fails if the type is one of the user's current types.",
  shortDesc: "Changes user's type based on terrain. (Normal)",
  id: 'camouflage',
  fullname: 'move: Camouflage',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Clamp',
  accuracy: 75,
  pp: 10,
  isNonstandard: null,
  num: 128,
  basePower: 35,
  category: 'Special',
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'partiallytrapped',
  secondary: null,
  target: 'normal',
  type: 'Water',
  contestType: 'Tough',
  desc: 'Prevents the target from switching for two to five turns. Causes damage to the target equal to 1/16 of its maximum HP, rounded down, at the end of each turn during effect. The target can still switch out if it uses Baton Pass. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',
  shortDesc: 'Traps and damages the target for 2-5 turns.',
  id: 'clamp',
  fullname: 'move: Clamp',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Cotton Spore',
  accuracy: 85,
  onTryHit: [Function: onTryHit],
  target: 'normal',
  num: 178,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1, powder: 1 },
  boosts: { spe: -2 },
  secondary: null,
  type: 'Grass',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Beautiful',
  desc: "Lowers the target's Speed by 2 stages.",
  shortDesc: "Lowers the target's Speed by 2.",
  id: 'cottonspore',
  fullname: 'move: Cotton Spore',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Crabhammer',
  accuracy: 85,
  basePower: 90,
  num: 152,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  critRatio: 2,
  secondary: null,
  target: 'normal',
  type: 'Water',
  contestType: 'Tough',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio.',
  id: 'crabhammer',
  fullname: 'move: Crabhammer',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Curse',
  flags: { metronome: 1 },
  onModifyMove: [Function: onModifyMove],
  condition: {
    onStart: [Function: onStart],
    onResidualOrder: 10,
    onResidualSubOrder: 8,
    onResidual: [Function: onResidual]
  },
  type: '???',
  target: 'normal',
  num: 174,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  volatileStatus: 'curse',
  onTryHit: [Function: onTryHit],
  onHit: [Function: onHit],
  secondary: null,
  nonGhostTarget: 'self',
  zMove: { effect: 'curse' },
  contestType: 'Tough',
  desc: "If the user is not a Ghost type, lowers the user's Speed by 1 stage and raises the user's Attack and Defense by 1 stage. If the user is a Ghost type, the user loses 1/2 of its maximum HP, rounded down and even if it would cause fainting, in exchange for the target losing 1/4 of its maximum HP, rounded down, at the end of each turn while it is active. If the target uses Baton Pass, the replacement will continue to be affected. Fails if there is no target or if the target is already affected or has a substitute.",
  shortDesc: 'Curses if Ghost, else -1 Spe, +1 Atk, +1 Def.',
  id: 'curse',
  fullname: 'move: Curse',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: '???',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Detect',
  priority: 3,
  condition: {
    duration: 1,
    onStart: [Function: onStart],
    onTryHitPriority: 3,
    onTryHit: [Function: onTryHit]
  },
  num: 197,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  flags: { noassist: 1, failcopycat: 1 },
  stallingMove: true,
  volatileStatus: 'protect',
  onPrepareHit: [Function: onPrepareHit],
  onHit: [Function: onHit],
  secondary: null,
  target: 'self',
  type: 'Fighting',
  zMove: { boost: { evasion: 1 } },
  contestType: 'Cool',
  desc: "The user is protected from most attacks made by other Pokemon during this turn. This move has an X/65536 chance of being successful, where X starts at 65535 and halves, rounded down, each time this move is successfully used. After the fourth successful use in a row, X drops to 118 and continues with seemingly random values from 0-65535 on subsequent successful uses. X resets to 65535 if this move fails or if the user's last move used is not Detect, Endure, or Protect. Fails if the user moves last this turn.",
  shortDesc: 'Prevents moves from affecting the user this turn.',
  id: 'detect',
  fullname: 'move: Detect',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Double-Edge',
  recoil: [ 1, 3 ],
  num: 38,
  accuracy: 100,
  basePower: 120,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'If the target lost HP, the user takes recoil damage equal to 1/3 the HP lost by the target, rounded down, but not less than 1 HP.',
  shortDesc: 'Has 1/3 recoil.',
  id: 'doubleedge',
  fullname: 'move: Double-Edge',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Dream Eater',
  onTryImmunity: [Function: onTryImmunity],
  flags: { protect: 1, mirror: 1, metronome: 1 },
  num: 138,
  accuracy: 100,
  basePower: 100,
  category: 'Special',
  pp: 15,
  priority: 0,
  drain: [ 1, 2 ],
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: 'The target is unaffected by this move unless it is asleep and does not have a substitute. The user recovers 1/2 the HP lost by the target, rounded down, but not less than 1 HP.',
  shortDesc: 'User gains 1/2 HP inflicted. Sleeping target only.',
  id: 'dreameater',
  fullname: 'move: Dream Eater',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Endeavor',
  onTry: [Function: onTry],
  num: 283,
  accuracy: 100,
  basePower: 0,
  damageCallback: [Function: damageCallback],
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: {
    contact: 1,
    protect: 1,
    mirror: 1,
    metronome: 1,
    noparentalbond: 1
  },
  onTryImmunity: [Function: onTryImmunity],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { basePower: 160 },
  maxMove: { basePower: 130 },
  contestType: 'Tough',
  desc: "Deals damage to the target equal to (target's current HP - user's current HP). The target is unaffected if its current HP is less than or equal to the user's current HP.",
  shortDesc: "Lowers the target's HP to the user's HP.",
  id: 'endeavor',
  fullname: 'move: Endeavor',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Extreme Speed',
  priority: 1,
  num: 245,
  accuracy: 100,
  basePower: 80,
  category: 'Physical',
  pp: 5,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'Usually goes first.',
  id: 'extremespeed',
  fullname: 'move: Extreme Speed',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Fire Spin',
  accuracy: 70,
  basePower: 15,
  num: 83,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'partiallytrapped',
  secondary: null,
  target: 'normal',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: 'Prevents the target from switching for two to five turns. Causes damage to the target equal to 1/16 of its maximum HP, rounded down, at the end of each turn during effect. The target can still switch out if it uses Baton Pass. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',
  shortDesc: 'Traps and damages the target for 2-5 turns.',
  id: 'firespin',
  fullname: 'move: Fire Spin',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Focus Punch',
  priorityChargeCallback: [Function: priorityChargeCallback],
  beforeTurnCallback: [Function: beforeTurnCallback],
  beforeMoveCallback: [Function: beforeMoveCallback],
  onTry: [Function: onTry],
  num: 264,
  accuracy: 100,
  basePower: 150,
  category: 'Physical',
  pp: 20,
  priority: -3,
  flags: {
    contact: 1,
    protect: 1,
    punch: 1,
    failmefirst: 1,
    nosleeptalk: 1,
    noassist: 1,
    failcopycat: 1,
    failinstruct: 1
  },
  condition: {
    duration: 1,
    onStart: [Function: onStart],
    onHit: [Function: onHit],
    onTryAddVolatile: [Function: onTryAddVolatile]
  },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Tough',
  desc: 'The user loses its focus and does nothing if it is hit by a damaging attack this turn before it can execute the move, but it still loses PP.',
  shortDesc: 'Fails if the user takes damage before it hits.',
  id: 'focuspunch',
  fullname: 'move: Focus Punch',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Future Sight',
  accuracy: 90,
  basePower: 80,
  pp: 15,
  onTry: [Function: onTry],
  flags: { metronome: 1, futuremove: 1 },
  num: 248,
  category: 'Special',
  priority: 0,
  ignoreImmunity: true,
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: "Deals typeless damage that cannot be a critical hit two turns after this move is used. Damage is calculated against the target on use, and at the end of the final turn that damage is dealt to the Pokemon at the position the original target had at the time. Fails if this move or Doom Desire is already in effect for the target's position.",
  shortDesc: 'Hits two turns after being used.',
  id: 'futuresight',
  fullname: 'move: Future Sight',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Growth',
  onModifyMove: [Function: onModifyMove],
  boosts: { spa: 1 },
  pp: 40,
  num: 74,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { spa: 1 } },
  contestType: 'Beautiful',
  desc: "Raises the user's Special Attack by 1 stage.",
  shortDesc: "Raises the user's Sp. Atk by 1.",
  id: 'growth',
  fullname: 'move: Growth',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Heal Bell',
  onHit: [Function: onHit],
  flags: { snatch: 1, sound: 1, metronome: 1 },
  num: 215,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  target: 'allyTeam',
  type: 'Normal',
  zMove: { effect: 'heal' },
  contestType: 'Beautiful',
  desc: "Every Pokemon in the user's party is cured of its non-volatile status condition. Pokemon with the Soundproof Ability are not cured.",
  shortDesc: "Cures the user's party of all status conditions.",
  id: 'healbell',
  fullname: 'move: Heal Bell',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondary: null,
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Icicle Spear',
  basePower: 10,
  num: 333,
  accuracy: 100,
  category: 'Special',
  pp: 30,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Ice',
  zMove: { basePower: 140 },
  maxMove: { basePower: 130 },
  contestType: 'Beautiful',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'iciclespear',
  fullname: 'move: Icicle Spear',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Imprison',
  flags: { bypasssub: 1, metronome: 1 },
  onTryHit: [Function: onTryHit],
  num: 286,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  volatileStatus: 'imprison',
  condition: {
    noCopy: true,
    onStart: [Function: onStart],
    onFoeDisableMove: [Function: onFoeDisableMove],
    onFoeBeforeMovePriority: 4,
    onFoeBeforeMove: [Function: onFoeBeforeMove]
  },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { boost: { spd: 2 } },
  contestType: 'Clever',
  desc: "The user prevents all opposing Pokemon from using any moves that the user also knows as long as the user remains active. Fails if no opposing Pokemon know any of the user's moves.",
  shortDesc: 'No foe can use any move known by the user.',
  id: 'imprison',
  fullname: 'move: Imprison',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Ingrain',
  condition: {
    onStart: [Function: onStart],
    onResidualOrder: 10,
    onResidualSubOrder: 1,
    onResidual: [Function: onResidual],
    onTrapPokemon: [Function: onTrapPokemon],
    onDragOut: [Function: onDragOut]
  },
  num: 275,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, nonsky: 1, metronome: 1 },
  volatileStatus: 'ingrain',
  secondary: null,
  target: 'self',
  type: 'Grass',
  zMove: { boost: { spd: 1 } },
  contestType: 'Clever',
  desc: 'The user has 1/16 of its maximum HP restored at the end of each turn, but it is prevented from switching out and other Pokemon cannot force the user to switch out. The user can still switch out if it uses Baton Pass, and the replacement will remain trapped and still receive the healing effect.',
  shortDesc: 'User recovers 1/16 max HP per turn. Traps user.',
  id: 'ingrain',
  fullname: 'move: Ingrain',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Knock Off',
  onAfterHit: [Function: onAfterHit],
  basePower: 20,
  onBasePower: [Function: onBasePower],
  num: 282,
  accuracy: 100,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Dark',
  contestType: 'Clever',
  desc: "The target's held item is lost for the rest of the battle, unless it has the Sticky Hold Ability. During the effect, the target cannot gain a new item by any means.",
  shortDesc: "Target's item is lost and it cannot obtain another.",
  id: 'knockoff',
  fullname: 'move: Knock Off',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Leech Seed',
  condition: {
    onStart: [Function: onStart],
    onResidualOrder: 10,
    onResidualSubOrder: 5,
    onResidual: [Function: onResidual]
  },
  num: 73,
  accuracy: 90,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'leechseed',
  onTryImmunity: [Function: onTryImmunity],
  secondary: null,
  target: 'normal',
  type: 'Grass',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Clever',
  desc: "The Pokemon at the user's position steals 1/8 of the target's maximum HP, rounded down, at the end of each turn. If the target uses Baton Pass, the replacement will continue being leeched. If the target switches out or uses Rapid Spin, the effect ends. Grass-type Pokemon are immune to this move on use, but not its effect.",
  shortDesc: "1/8 of target's HP is restored to user every turn.",
  id: 'leechseed',
  fullname: 'move: Leech Seed',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Light Screen',
  condition: {
    duration: 5,
    durationCallback: [Function: durationCallback],
    onAnyModifyDamagePhase1: [Function: onAnyModifyDamagePhase1],
    onSideStart: [Function: onSideStart],
    onSideResidualOrder: 2,
    onSideEnd: [Function: onSideEnd]
  },
  num: 113,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  sideCondition: 'lightscreen',
  secondary: null,
  target: 'allySide',
  type: 'Psychic',
  zMove: { boost: { spd: 1 } },
  contestType: 'Beautiful',
  desc: "For 5 turns, the user and its party members take 1/2 damage from special attacks, or 2/3 damage if there are multiple active Pokemon on the user's side. Critical hits ignore this effect. It is removed from the user's side if the user or an ally is successfully hit by Brick Break. Fails if the effect is already active on the user's side.",
  shortDesc: 'For 5 turns, special damage to allies is halved.',
  id: 'lightscreen',
  fullname: 'move: Light Screen',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Magic Coat',
  condition: { duration: 1, onTryHitPriority: 2, onTryHit: [Function: onTryHit] },
  isNonstandard: null,
  num: 277,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 4,
  flags: { metronome: 1 },
  volatileStatus: 'magiccoat',
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { boost: { spd: 2 } },
  contestType: 'Beautiful',
  desc: 'The user is unaffected by certain non-damaging moves directed at it and will instead use such moves against the original user. If the move targets both opposing Pokemon and the Pokemon under this effect is on the left side, it will reflect the move targeting both opposing Pokemon and its ally will not be affected by the original move; otherwise, if the Pokemon under this effect is on the right side, its ally will be affected by the original move and this Pokemon will reflect the move only targeting the original user. The effect ends once a move is reflected or at the end of the turn. Moves reflected in this way can be reflected again by another Pokemon under this effect. If the user has the Soundproof Ability, it nullifies sound-based moves before this effect happens. The Lightning Rod Ability redirects Electric moves before this move takes effect.',
  shortDesc: 'Bounces back certain non-damaging moves.',
  id: 'magiccoat',
  fullname: 'move: Magic Coat',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Metronome',
  flags: { noassist: 1, failcopycat: 1, nosleeptalk: 1, failmimic: 1 },
  num: 118,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  onHit: [Function: onHit],
  callsMove: true,
  secondary: null,
  target: 'self',
  type: 'Normal',
  contestType: 'Cute',
  desc: 'A random move is selected for use, other than Counter, Covet, Destiny Bond, Detect, Endure, Focus Punch, Follow Me, Helping Hand, Metronome, Mimic, Mirror Coat, Protect, Sketch, Sleep Talk, Snatch, Struggle, Thief, or Trick.',
  shortDesc: 'Picks a random move.',
  id: 'metronome',
  fullname: 'move: Metronome',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Minimize',
  boosts: { evasion: 1 },
  pp: 20,
  condition: {
    noCopy: true,
    onSourceModifyDamage: [Function: onSourceModifyDamage]
  },
  num: 107,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  volatileStatus: 'minimize',
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: "Raises the user's evasiveness by 1 stage. Whether or not the user's evasiveness was changed, Astonish, Extrasensory, Needle Arm, and Stomp will have their damage doubled if used against the user while it is active.",
  shortDesc: "Raises the user's evasiveness by 1.",
  id: 'minimize',
  fullname: 'move: Minimize',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Mist',
  condition: {
    duration: 5,
    onTryBoost: [Function: onTryBoost],
    onSideStart: [Function: onSideStart],
    onSideResidualOrder: 3,
    onSideEnd: [Function: onSideEnd]
  },
  num: 54,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  sideCondition: 'mist',
  secondary: null,
  target: 'allySide',
  type: 'Ice',
  zMove: { effect: 'heal' },
  contestType: 'Beautiful',
  desc: "For 5 turns, the user and its party members are protected from having their stat stages lowered by other Pokemon. Fails if the effect is already active on the user's side.",
  shortDesc: "For 5 turns, protects user's party from stat drops.",
  id: 'mist',
  fullname: 'move: Mist',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Moonlight',
  onHit: [Function: onHit],
  type: 'Normal',
  num: 236,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  secondary: null,
  target: 'self',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Beautiful',
  desc: 'The user restores 1/2 of its maximum HP if no weather conditions are in effect, 2/3 of its maximum HP if the weather is Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Rain Dance, or Sandstorm, all rounded down.',
  shortDesc: 'Heals the user by a weather-dependent amount.',
  id: 'moonlight',
  fullname: 'move: Moonlight',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Morning Sun',
  onHit: [Function: onHit],
  num: 234,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Beautiful',
  desc: 'The user restores 1/2 of its maximum HP if no weather conditions are in effect, 2/3 of its maximum HP if the weather is Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Rain Dance, or Sandstorm, all rounded down.',
  shortDesc: 'Heals the user by a weather-dependent amount.',
  id: 'morningsun',
  fullname: 'move: Morning Sun',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Mud Sport',
  condition: {
    onStart: [Function: onStart],
    onAnyBasePowerPriority: 3,
    onAnyBasePower: [Function: onAnyBasePower]
  },
  pseudoWeather: undefined,
  volatileStatus: 'mudsport',
  isNonstandard: null,
  num: 300,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { nonsky: 1, metronome: 1 },
  secondary: null,
  target: 'all',
  type: 'Ground',
  zMove: { boost: { spd: 1 } },
  contestType: 'Cute',
  desc: 'While the user is active, all Electric-type attacks used by any active Pokemon have their power halved. Fails if this effect is already active for the user. Baton Pass can be used to transfer this effect to an ally.',
  shortDesc: 'Weakens Electric-type attacks to 1/2 their power.',
  id: 'mudsport',
  fullname: 'move: Mud Sport',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Pay Day',
  onHit: [Function: onHit],
  num: 6,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Clever',
  desc: 'No additional effect.',
  shortDesc: 'Scatters coins.',
  id: 'payday',
  fullname: 'move: Pay Day',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Perish Song',
  condition: {
    duration: 4,
    onEnd: [Function: onEnd],
    onResidualOrder: 12,
    onResidual: [Function: onResidual]
  },
  flags: { sound: 1, distance: 1, metronome: 1 },
  num: 195,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  onHitField: [Function: onHitField],
  secondary: null,
  target: 'all',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Beautiful',
  desc: "Each active Pokemon receives a perish count of 4 if it doesn't already have a perish count. At the end of each turn including the turn used, the perish count of all active Pokemon lowers by 1 and Pokemon faint if the number reaches 0. The perish count is removed from Pokemon that switch out. If a Pokemon uses Baton Pass while it has a perish count, the replacement will gain the perish count and continue to count down.",
  shortDesc: 'All active Pokemon will faint in 3 turns.',
  id: 'perishsong',
  fullname: 'move: Perish Song',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Poison Gas',
  accuracy: 55,
  target: 'normal',
  num: 139,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  status: 'psn',
  secondary: null,
  type: 'Poison',
  zMove: { boost: { def: 1 } },
  contestType: 'Clever',
  desc: 'Poisons the target.',
  shortDesc: 'Poisons the foe(s).',
  id: 'poisongas',
  fullname: 'move: Poison Gas',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Protect',
  priority: 3,
  condition: {
    duration: 1,
    onStart: [Function: onStart],
    onTryHitPriority: 3,
    onTryHit: [Function: onTryHit]
  },
  num: 182,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  flags: { noassist: 1, failcopycat: 1 },
  stallingMove: true,
  volatileStatus: 'protect',
  onPrepareHit: [Function: onPrepareHit],
  onHit: [Function: onHit],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: "The user is protected from most attacks made by other Pokemon during this turn. This move has an X/65536 chance of being successful, where X starts at 65535 and halves, rounded down, each time this move is successfully used. After the fourth successful use in a row, X drops to 118 and continues with seemingly random values from 0-65535 on subsequent successful uses. X resets to 65535 if this move fails or if the user's last move used is not Detect, Endure, or Protect. Fails if the user moves last this turn.",
  shortDesc: 'Prevents moves from affecting the user this turn.',
  id: 'protect',
  fullname: 'move: Protect',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Psych Up',
  flags: { snatch: 1, bypasssub: 1, metronome: 1 },
  onHit: [Function: onHit],
  num: 244,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { effect: 'heal' },
  contestType: 'Clever',
  desc: "The user copies all of the target's current stat stage changes.",
  shortDesc: "Copies the target's current stat stages.",
  id: 'psychup',
  fullname: 'move: Psych Up',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Pursuit',
  condition: { duration: 1, onBeforeSwitchOut: [Function: onBeforeSwitchOut] },
  isNonstandard: null,
  num: 228,
  accuracy: 100,
  basePower: 40,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  beforeTurnCallback: [Function: beforeTurnCallback],
  onModifyMove: [Function: onModifyMove],
  onTryHit: [Function: onTryHit],
  secondary: null,
  target: 'normal',
  type: 'Dark',
  contestType: 'Clever',
  desc: "If the target is an opposing Pokemon and it switches out this turn, this move hits that Pokemon before it leaves the field. Power doubles and no accuracy check is done if the user hits an opponent switching out, and the user's turn is over; if an opponent faints from this, the replacement Pokemon becomes active immediately.",
  shortDesc: 'Power doubles if the targeted foe is switching out.',
  id: 'pursuit',
  fullname: 'move: Pursuit',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Rapid Spin',
  self: { onHit: [Function: onHit] },
  basePower: 20,
  secondary: null,
  num: 229,
  accuracy: 100,
  category: 'Physical',
  pp: 40,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  onAfterHit: [Function: onAfterHit],
  onAfterSubDamage: [Function: onAfterSubDamage],
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: "If this move is successful, the effects of Leech Seed and binding moves end for the user, and Spikes are removed from the user's side of the field.",
  shortDesc: 'Frees user from hazards, binding, Leech Seed.',
  id: 'rapidspin',
  fullname: 'move: Rapid Spin',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Recycle',
  flags: { metronome: 1 },
  num: 278,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  onHit: [Function: onHit],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { spe: 2 } },
  contestType: 'Clever',
  desc: "The user regains the item last used by a Pokemon in its current position on the field, even if that Pokemon was not the user. Fails if the user is holding an item, if no items have been used at the user's position, or if the item was lost to Covet, Knock Off, or Thief. Items thrown with Fling can be regained.",
  shortDesc: 'Restores the item the user last used.',
  id: 'recycle',
  fullname: 'move: Recycle',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Reflect',
  condition: {
    duration: 5,
    durationCallback: [Function: durationCallback],
    onAnyModifyDamagePhase1: [Function: onAnyModifyDamagePhase1],
    onSideStart: [Function: onSideStart],
    onSideResidualOrder: 1,
    onSideEnd: [Function: onSideEnd]
  },
  num: 115,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  sideCondition: 'reflect',
  secondary: null,
  target: 'allySide',
  type: 'Psychic',
  zMove: { boost: { def: 1 } },
  contestType: 'Clever',
  desc: "For 5 turns, the user and its party members take 1/2 damage from physical attacks, or 2/3 damage if there are multiple active Pokemon on the user's side. Critical hits ignore this effect. It is removed from the user's side if the user or an ally is successfully hit by Brick Break. Fails if the effect is already active on the user's side.",
  shortDesc: 'For 5 turns, physical damage to allies is halved.',
  id: 'reflect',
  fullname: 'move: Reflect',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Roar',
  flags: { protect: 1, mirror: 1, sound: 1, bypasssub: 1, metronome: 1 },
  accuracy: 100,
  num: 46,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: -6,
  forceSwitch: true,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { def: 1 } },
  contestType: 'Cool',
  desc: "The target is forced to switch out and be replaced with a random unfainted ally. Fails if the target is the last unfainted Pokemon in its party, if the target used Ingrain previously or has the Suction Cups Ability, or if the user's level is lower than the target's and X * (user's level + target's level) / 256 + 1 is less than or equal to (target's level / 4), rounded down, where X is a random number from 0 to 255.",
  shortDesc: 'Forces the target to switch to a random ally.',
  id: 'roar',
  fullname: 'move: Roar',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Rock Blast',
  accuracy: 80,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  num: 350,
  basePower: 25,
  category: 'Physical',
  pp: 10,
  priority: 0,
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Rock',
  zMove: { basePower: 140 },
  maxMove: { basePower: 130 },
  contestType: 'Tough',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'rockblast',
  fullname: 'move: Rock Blast',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Rock',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Role Play',
  onTryHit: [Function: onTryHit],
  num: 272,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { bypasssub: 1, allyanim: 1, metronome: 1 },
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  zMove: { boost: { spe: 1 } },
  contestType: 'Cute',
  desc: "The user's Ability changes to match the target's Ability. Fails if the target's Ability is Wonder Guard.",
  shortDesc: "User replaces its Ability with the target's.",
  id: 'roleplay',
  fullname: 'move: Role Play',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Safeguard',
  condition: {
    duration: 5,
    durationCallback: [Function: durationCallback],
    onSetStatus: [Function: onSetStatus],
    onTryAddVolatile: [Function: onTryAddVolatile],
    onSideStart: [Function: onSideStart],
    onSideResidualOrder: 4,
    onSideEnd: [Function: onSideEnd]
  },
  num: 219,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 25,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  sideCondition: 'safeguard',
  secondary: null,
  target: 'allySide',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Beautiful',
  desc: "For 5 turns, the user and its party members cannot have non-volatile status conditions or confusion inflicted on them by other Pokemon. Pokemon on the user's side cannot become affected by Yawn but can fall asleep from its effect. Fails if the effect is already active on the user's side.",
  shortDesc: "For 5 turns, protects user's party from status.",
  id: 'safeguard',
  fullname: 'move: Safeguard',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Sand Tomb',
  accuracy: 70,
  basePower: 15,
  num: 328,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'partiallytrapped',
  secondary: null,
  target: 'normal',
  type: 'Ground',
  contestType: 'Clever',
  desc: 'Prevents the target from switching for two to five turns. Causes damage to the target equal to 1/16 of its maximum HP, rounded down, at the end of each turn during effect. The target can still switch out if it uses Baton Pass. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',
  shortDesc: 'Traps and damages the target for 2-5 turns.',
  id: 'sandtomb',
  fullname: 'move: Sand Tomb',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Scary Face',
  accuracy: 90,
  num: 184,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, allyanim: 1, metronome: 1 },
  boosts: { spe: -2 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Tough',
  desc: "Lowers the target's Speed by 2 stages.",
  shortDesc: "Lowers the target's Speed by 2.",
  id: 'scaryface',
  fullname: 'move: Scary Face',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Secret Power',
  secondary: { chance: 30, status: 'par' },
  isNonstandard: null,
  num: 290,
  accuracy: 100,
  basePower: 70,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  onModifyMove: [Function: onModifyMove],
  target: 'normal',
  type: 'Normal',
  contestType: 'Clever',
  desc: 'Has a 30% chance to cause a secondary effect on the target based on the battle terrain. Causes paralysis on the regular Wi-Fi terrain.',
  shortDesc: 'Effect varies with terrain. (30% paralysis chance)',
  id: 'secretpower',
  fullname: 'move: Secret Power',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 30, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Skill Swap',
  onHit: [Function: onHit],
  num: 285,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, bypasssub: 1, allyanim: 1, metronome: 1 },
  onTryHit: [Function: onTryHit],
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  zMove: { boost: { spe: 1 } },
  contestType: 'Clever',
  desc: "The user swaps its Ability with the target's Ability. Fails if either the user or the target's Ability is Wonder Guard.",
  shortDesc: 'The user and the target trade Abilities.',
  id: 'skillswap',
  fullname: 'move: Skill Swap',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Snatch',
  flags: { bypasssub: 1, noassist: 1, failcopycat: 1 },
  condition: {
    duration: 1,
    onStart: [Function: onStart],
    onAnyPrepareHitPriority: -1,
    onAnyPrepareHit: [Function: onAnyPrepareHit]
  },
  isNonstandard: null,
  num: 289,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 4,
  volatileStatus: 'snatch',
  secondary: null,
  target: 'self',
  type: 'Dark',
  zMove: { boost: { spe: 2 } },
  contestType: 'Clever',
  desc: 'If another Pokemon uses certain non-damaging moves this turn, the user steals that move to use itself. If multiple Pokemon use this move this turn, the applicable moves are stolen by each of those Pokemon in turn order, and only the last user in turn order will gain the effects.',
  shortDesc: 'User steals certain support moves to use itself.',
  id: 'snatch',
  fullname: 'move: Snatch',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Snore',
  flags: { protect: 1, mirror: 1, sound: 1, metronome: 1 },
  basePower: 40,
  num: 173,
  accuracy: 100,
  category: 'Physical',
  pp: 15,
  priority: 0,
  sleepUsable: true,
  onTry: [Function: onTry],
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: 'Has a 30% chance to make the target flinch. Fails if the user is not asleep.',
  shortDesc: 'User must be asleep. 30% chance to flinch target.',
  id: 'snore',
  fullname: 'move: Snore',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Spikes',
  flags: { metronome: 1, mustpressure: 1 },
  num: 191,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  sideCondition: 'spikes',
  condition: {
    onSideStart: [Function: onSideStart],
    onSideRestart: [Function: onSideRestart],
    onEntryHazard: [Function: onEntryHazard]
  },
  secondary: null,
  target: 'foeSide',
  type: 'Ground',
  zMove: { boost: { def: 1 } },
  contestType: 'Clever',
  desc: 'Sets up a hazard on the opposing side of the field, damaging each opposing Pokemon that switches in, unless it is a Flying-type Pokemon or has the Levitate Ability. Can be used up to three times before failing. Opponents lose 1/8 of their maximum HP with one layer, 1/6 of their maximum HP with two layers, and 1/4 of their maximum HP with three layers, all rounded down. Can be removed from the opposing side if any opposing Pokemon uses Rapid Spin successfully.',
  shortDesc: 'Hurts grounded foes on switch-in. Max 3 layers.',
  id: 'spikes',
  fullname: 'move: Spikes',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Substitute',
  condition: {
    onStart: [Function: onStart],
    onTryPrimaryHitPriority: -1,
    onTryPrimaryHit: [Function: onTryPrimaryHit],
    onEnd: [Function: onEnd]
  },
  num: 164,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { snatch: 1, nonsky: 1, metronome: 1 },
  volatileStatus: 'substitute',
  onTryHit: [Function: onTryHit],
  onHit: [Function: onHit],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: 'The user takes 1/4 of its maximum HP, rounded down, and puts it into a substitute to take its place in battle. The substitute is removed once enough damage is inflicted on it, or if the user switches out or faints. Baton Pass can be used to transfer the substitute to an ally, and the substitute will keep its remaining HP. Until the substitute is broken, it receives damage from all attacks made by other Pokemon and shields the user from status effects and stat stage changes caused by other Pokemon. The user still takes normal damage from weather and status effects while behind its substitute. If the substitute breaks during a multi-hit attack, the user will take damage from any remaining hits. If a substitute is created while the user is trapped by a binding move, the binding effect ends immediately. Fails if the user does not have enough HP remaining to create a substitute without fainting, or if it already has a substitute.',
  shortDesc: 'User takes 1/4 its max HP to put in a substitute.',
  id: 'substitute',
  fullname: 'move: Substitute',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Synthesis',
  onHit: [Function: onHit],
  num: 235,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  secondary: null,
  target: 'self',
  type: 'Grass',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Clever',
  desc: 'The user restores 1/2 of its maximum HP if no weather conditions are in effect, 2/3 of its maximum HP if the weather is Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Rain Dance, or Sandstorm, all rounded down.',
  shortDesc: 'Heals the user by a weather-dependent amount.',
  id: 'synthesis',
  fullname: 'move: Synthesis',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Tackle',
  accuracy: 95,
  basePower: 35,
  num: 33,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'tackle',
  fullname: 'move: Tackle',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Tail Glow',
  boosts: { spa: 2 },
  isNonstandard: null,
  num: 294,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  secondary: null,
  target: 'self',
  type: 'Bug',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Beautiful',
  desc: "Raises the user's Special Attack by 2 stages.",
  shortDesc: "Raises the user's Sp. Atk by 2.",
  id: 'tailglow',
  fullname: 'move: Tail Glow',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Thrash',
  basePower: 90,
  pp: 20,
  onAfterMove: [Function: onAfterMove],
  num: 37,
  accuracy: 100,
  category: 'Physical',
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, failinstruct: 1 },
  self: { volatileStatus: 'lockedmove' },
  secondary: null,
  target: 'randomNormal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'The user spends two or three turns locked into this move and becomes confused at the end of the last turn of the effect if it is not already. This move targets an opposing Pokemon at random on each turn. If the user is prevented from moving, falls asleep, becomes frozen, or the attack is not successful against the target, the effect ends without causing confusion. If this move is called by Sleep Talk, the move is used for one turn and does not confuse the user.',
  shortDesc: 'Lasts 2-3 turns. Confuses the user afterwards.',
  id: 'thrash',
  fullname: 'move: Thrash',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Torment',
  flags: { protect: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  num: 259,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  volatileStatus: 'torment',
  condition: {
    noCopy: true,
    onStart: [Function: onStart],
    onEnd: [Function: onEnd],
    onDisableMove: [Function: onDisableMove]
  },
  secondary: null,
  target: 'normal',
  type: 'Dark',
  zMove: { boost: { def: 1 } },
  contestType: 'Tough',
  desc: 'Prevents the target from selecting the same move for use two turns in a row. This effect ends when the target is no longer active.',
  shortDesc: "Target can't select the same move twice in a row.",
  id: 'torment',
  fullname: 'move: Torment',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Toxic',
  accuracy: 85,
  onPrepareHit: [Function: onPrepareHit],
  condition: {
    noCopy: true,
    duration: 1,
    onSourceInvulnerabilityPriority: 1,
    onSourceInvulnerability: [Function: onSourceInvulnerability],
    onSourceAccuracy: [Function: onSourceAccuracy]
  },
  num: 92,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  status: 'tox',
  secondary: null,
  target: 'normal',
  type: 'Poison',
  zMove: { boost: { def: 1 } },
  contestType: 'Clever',
  desc: 'Badly poisons the target.',
  shortDesc: 'Badly poisons the target.',
  id: 'toxic',
  fullname: 'move: Toxic',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Transform',
  flags: { bypasssub: 1, metronome: 1, failencore: 1 },
  num: 144,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { effect: 'heal' },
  contestType: 'Clever',
  desc: "The user transforms into the target. The target's current stats, stat stages, types, moves, Ability, weight, IVs, species, and sprite are copied. The user's level and HP remain the same and each copied move receives only 5 PP. This move fails if the target has transformed.",
  shortDesc: "Copies target's stats, moves, types, and Ability.",
  id: 'transform',
  fullname: 'move: Transform',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Trick',
  onTryHit: [Function: onTryHit],
  onHit: [Function: onHit],
  num: 271,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, allyanim: 1, noassist: 1, failcopycat: 1 },
  onTryImmunity: [Function: onTryImmunity],
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  zMove: { boost: { spe: 2 } },
  contestType: 'Clever',
  desc: "The user swaps its held item with the target's held item. Fails if either the user or the target is holding a Mail, if neither is holding an item, if either is under the effect of Knock Off, or if the target has the Sticky Hold Ability.",
  shortDesc: "User switches its held item with the target's.",
  id: 'trick',
  fullname: 'move: Trick',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Water Sport',
  condition: {
    onStart: [Function: onStart],
    onAnyBasePowerPriority: 3,
    onAnyBasePower: [Function: onAnyBasePower]
  },
  pseudoWeather: undefined,
  volatileStatus: 'watersport',
  isNonstandard: null,
  num: 346,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { nonsky: 1, metronome: 1 },
  secondary: null,
  target: 'all',
  type: 'Water',
  zMove: { boost: { spd: 1 } },
  contestType: 'Cute',
  desc: 'While the user is active, all Fire-type attacks used by any active Pokemon have their power halved. Fails if this effect is already active for the user. Baton Pass can be used to transfer this effect to an ally.',
  shortDesc: 'Weakens Fire-type attacks to 1/2 their power.',
  id: 'watersport',
  fullname: 'move: Water Sport',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Whirlpool',
  accuracy: 70,
  basePower: 15,
  num: 250,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'partiallytrapped',
  secondary: null,
  target: 'normal',
  type: 'Water',
  contestType: 'Beautiful',
  desc: 'Prevents the target from switching for two to five turns. Causes damage to the target equal to 1/16 of its maximum HP, rounded down, at the end of each turn during effect. The target can still switch out if it uses Baton Pass. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',
  shortDesc: 'Traps and damages the target for 2-5 turns.',
  id: 'whirlpool',
  fullname: 'move: Whirlpool',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Whirlwind',
  flags: { protect: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  accuracy: 100,
  num: 18,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: -6,
  forceSwitch: true,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spd: 1 } },
  contestType: 'Clever',
  desc: "The target is forced to switch out and be replaced with a random unfainted ally. Fails if the target is the last unfainted Pokemon in its party, if the target used Ingrain previously or has the Suction Cups Ability, or if the user's level is lower than the target's and X * (user's level + target's level) / 256 + 1 is less than or equal to (target's level / 4), rounded down, where X is a random number from 0 to 255.",
  shortDesc: 'Forces the target to switch to a random ally.',
  id: 'whirlwind',
  fullname: 'move: Whirlwind',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Wish',
  flags: { heal: 1, metronome: 1 },
  slotCondition: 'Wish',
  condition: { duration: 2, onResidualOrder: 7, onEnd: [Function: onEnd] },
  num: 273,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { spd: 1 } },
  contestType: 'Cute',
  desc: "At the end of the next turn, the Pokemon at the user's position has 1/2 of its maximum HP restored to it, rounded down. Fails if this move is already in effect for the user's position.",
  shortDesc: "Next turn, heals 50% of the recipient's max HP.",
  id: 'wish',
  fullname: 'move: Wish',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Wrap',
  accuracy: 85,
  num: 35,
  basePower: 15,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'partiallytrapped',
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'Prevents the target from switching for two to five turns. Causes damage to the target equal to 1/16 of its maximum HP, rounded down, at the end of each turn during effect. The target can still switch out if it uses Baton Pass. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin or Substitute successfully. This effect is not stackable or reset by using this or another binding move.',
  shortDesc: 'Traps and damages the target for 2-5 turns.',
  id: 'wrap',
  fullname: 'move: Wrap',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Yawn',
  condition: {
    noCopy: true,
    duration: 2,
    onStart: [Function: onStart],
    onResidualOrder: 10,
    onResidualSubOrder: 19,
    onEnd: [Function: onEnd]
  },
  num: 281,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'yawn',
  onTryHit: [Function: onTryHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Cute',
  desc: 'Causes the target to fall asleep at the end of the next turn. Fails when used if the target cannot fall asleep or if it already has a non-volatile status condition. At the end of the next turn, if the target is still active, does not have a non-volatile status condition, and can fall asleep, it falls asleep. If the target becomes affected, this effect cannot be prevented by Safeguard or a substitute, or by falling asleep and waking up during the effect.',
  shortDesc: 'Puts the target to sleep after 1 turn.',
  id: 'yawn',
  fullname: 'move: Yawn',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Acid Armor',
  pp: 40,
  num: 151,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { def: 2 },
  secondary: null,
  target: 'self',
  type: 'Poison',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Tough',
  desc: "Raises the user's Defense by 2 stages.",
  shortDesc: "Raises the user's Defense by 2.",
  id: 'acidarmor',
  fullname: 'move: Acid Armor',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Air Cutter',
  basePower: 55,
  num: 314,
  accuracy: 95,
  category: 'Physical',
  pp: 25,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, slicing: 1, wind: 1 },
  critRatio: 2,
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Flying',
  contestType: 'Cool',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio. Hits adjacent foes.',
  id: 'aircutter',
  fullname: 'move: Air Cutter',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Barrier',
  pp: 30,
  isNonstandard: null,
  num: 112,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { def: 2 },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cool',
  desc: "Raises the user's Defense by 2 stages.",
  shortDesc: "Raises the user's Defense by 2.",
  id: 'barrier',
  fullname: 'move: Barrier',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Block',
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  num: 335,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { def: 1 } },
  contestType: 'Cute',
  desc: 'Prevents the target from switching out. The target can still switch out if it uses Baton Pass. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field, unless it uses Baton Pass, in which case the target will remain trapped.',
  shortDesc: 'Prevents the target from switching out.',
  id: 'block',
  fullname: 'move: Block',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Bounce',
  flags: {
    contact: 1,
    charge: 1,
    protect: 1,
    mirror: 1,
    gravity: 1,
    distance: 1,
    metronome: 1,
    nosleeptalk: 1
  },
  num: 340,
  accuracy: 85,
  basePower: 85,
  category: 'Physical',
  pp: 5,
  priority: 0,
  onTryMove: [Function: onTryMove],
  condition: {
    duration: 2,
    onInvulnerability: [Function: onInvulnerability],
    onSourceBasePower: [Function: onSourceBasePower]
  },
  secondary: { chance: 30, status: 'par' },
  target: 'any',
  type: 'Flying',
  contestType: 'Cute',
  desc: 'Has a 30% chance to paralyze the target. This attack charges on the first turn and executes on the second. On the first turn, the user avoids all attacks other than Gust, Sky Uppercut, Thunder, and Twister, and Gust and Twister have doubled power when used against it.',
  shortDesc: 'Bounces turn 1. Hits turn 2. 30% paralyze.',
  id: 'bounce',
  fullname: 'move: Bounce',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: [ { chance: 30, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Bubble',
  basePower: 20,
  isNonstandard: null,
  num: 145,
  accuracy: 100,
  category: 'Special',
  pp: 30,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, boosts: { spe: -1 } },
  target: 'allAdjacentFoes',
  type: 'Water',
  contestType: 'Cute',
  desc: "Has a 10% chance to lower the target's Speed by 1 stage.",
  shortDesc: '10% chance to lower the foe(s) Speed by 1.',
  id: 'bubble',
  fullname: 'move: Bubble',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: [ { chance: 10, boosts: { spe: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Charm',
  type: 'Normal',
  num: 204,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, allyanim: 1, metronome: 1 },
  boosts: { atk: -2 },
  secondary: null,
  target: 'normal',
  zMove: { boost: { def: 1 } },
  contestType: 'Cute',
  desc: "Lowers the target's Attack by 2 stages.",
  shortDesc: "Lowers the target's Attack by 2.",
  id: 'charm',
  fullname: 'move: Charm',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Fire Blast',
  basePower: 120,
  num: 126,
  accuracy: 85,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, status: 'brn' },
  target: 'normal',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to burn the target.',
  shortDesc: '10% chance to burn the target.',
  id: 'fireblast',
  fullname: 'move: Fire Blast',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: [ { chance: 10, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Flamethrower',
  basePower: 95,
  num: 53,
  accuracy: 100,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, status: 'brn' },
  target: 'normal',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to burn the target.',
  shortDesc: '10% chance to burn the target.',
  id: 'flamethrower',
  fullname: 'move: Flamethrower',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: [ { chance: 10, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Grass Whistle',
  flags: { protect: 1, reflectable: 1, mirror: 1, sound: 1, metronome: 1 },
  isNonstandard: null,
  num: 320,
  accuracy: 55,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  status: 'slp',
  secondary: null,
  target: 'normal',
  type: 'Grass',
  zMove: { boost: { spe: 1 } },
  contestType: 'Clever',
  desc: 'Causes the target to fall asleep.',
  shortDesc: 'Causes the target to fall asleep.',
  id: 'grasswhistle',
  fullname: 'move: Grass Whistle',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Growl',
  flags: { protect: 1, reflectable: 1, mirror: 1, sound: 1, metronome: 1 },
  num: 45,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  boosts: { atk: -1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Normal',
  zMove: { boost: { def: 1 } },
  contestType: 'Cute',
  desc: "Lowers the target's Attack by 1 stage.",
  shortDesc: 'Lowers the foe(s) Attack by 1.',
  id: 'growl',
  fullname: 'move: Growl',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Heat Wave',
  basePower: 100,
  num: 257,
  accuracy: 90,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, wind: 1 },
  secondary: { chance: 10, status: 'brn' },
  target: 'allAdjacentFoes',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to burn the target.',
  shortDesc: '10% chance to burn the foe(s).',
  id: 'heatwave',
  fullname: 'move: Heat Wave',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: [ { chance: 10, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Hydro Pump',
  basePower: 120,
  num: 56,
  accuracy: 80,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Water',
  contestType: 'Beautiful',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'hydropump',
  fullname: 'move: Hydro Pump',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Hyper Voice',
  flags: { protect: 1, mirror: 1, sound: 1, metronome: 1 },
  num: 304,
  accuracy: 100,
  basePower: 90,
  category: 'Physical',
  pp: 10,
  priority: 0,
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect. Hits adjacent foes.',
  id: 'hypervoice',
  fullname: 'move: Hyper Voice',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Ice Beam',
  basePower: 95,
  num: 58,
  accuracy: 100,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, status: 'frz' },
  target: 'normal',
  type: 'Ice',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to freeze the target.',
  shortDesc: '10% chance to freeze the target.',
  id: 'icebeam',
  fullname: 'move: Ice Beam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: [ { chance: 10, status: 'frz' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Leech Life',
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  basePower: 20,
  pp: 15,
  num: 141,
  accuracy: 100,
  category: 'Physical',
  priority: 0,
  drain: [ 1, 2 ],
  secondary: null,
  target: 'normal',
  type: 'Bug',
  contestType: 'Clever',
  desc: 'The user recovers 1/2 the HP lost by the target, rounded down.',
  shortDesc: 'User recovers 50% of the damage dealt.',
  id: 'leechlife',
  fullname: 'move: Leech Life',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Lick',
  basePower: 20,
  num: 122,
  accuracy: 100,
  category: 'Physical',
  pp: 30,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, status: 'par' },
  target: 'normal',
  type: 'Ghost',
  contestType: 'Cute',
  desc: 'Has a 30% chance to paralyze the target.',
  shortDesc: '30% chance to paralyze the target.',
  id: 'lick',
  fullname: 'move: Lick',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: [ { chance: 30, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Mean Look',
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  num: 212,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spd: 1 } },
  contestType: 'Beautiful',
  desc: 'Prevents the target from switching out. The target can still switch out if it uses Baton Pass. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field, unless it uses Baton Pass, in which case the target will remain trapped.',
  shortDesc: 'Prevents the target from switching out.',
  id: 'meanlook',
  fullname: 'move: Mean Look',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Metal Sound',
  flags: { protect: 1, reflectable: 1, mirror: 1, sound: 1, metronome: 1 },
  num: 319,
  accuracy: 85,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  boosts: { spd: -2 },
  secondary: null,
  target: 'normal',
  type: 'Steel',
  zMove: { boost: { spa: 1 } },
  contestType: 'Clever',
  desc: "Lowers the target's Special Defense by 2 stages.",
  shortDesc: "Lowers the target's Sp. Def by 2.",
  id: 'metalsound',
  fullname: 'move: Metal Sound',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Steel',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Meteor Mash',
  accuracy: 85,
  basePower: 100,
  num: 309,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: { chance: 20, self: { boosts: { atk: 1 } } },
  target: 'normal',
  type: 'Steel',
  contestType: 'Cool',
  desc: "Has a 20% chance to raise the user's Attack by 1 stage.",
  shortDesc: "20% chance to raise the user's Attack by 1.",
  id: 'meteormash',
  fullname: 'move: Meteor Mash',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Steel',
  secondaries: [
    { chance: 20, self: { boosts: { atk: 1 } } }
  ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Muddy Water',
  basePower: 95,
  num: 330,
  accuracy: 85,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  secondary: { chance: 30, boosts: { accuracy: -1 } },
  target: 'allAdjacentFoes',
  type: 'Water',
  contestType: 'Tough',
  desc: "Has a 30% chance to lower the target's accuracy by 1 stage.",
  shortDesc: '30% chance to lower the foe(s) accuracy by 1.',
  id: 'muddywater',
  fullname: 'move: Muddy Water',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: [ { chance: 30, boosts: { accuracy: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Pin Missile',
  accuracy: 85,
  basePower: 14,
  num: 42,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Bug',
  zMove: { basePower: 140 },
  maxMove: { basePower: 130 },
  contestType: 'Cool',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'pinmissile',
  fullname: 'move: Pin Missile',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Poison Fang',
  secondary: { chance: 30, status: 'tox' },
  num: 305,
  accuracy: 100,
  basePower: 50,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1 },
  target: 'normal',
  type: 'Poison',
  contestType: 'Clever',
  desc: 'Has a 30% chance to badly poison the target.',
  shortDesc: '30% chance to badly poison the target.',
  id: 'poisonfang',
  fullname: 'move: Poison Fang',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: [ { chance: 30, status: 'tox' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 75 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Poison Powder',
  onTryHit: [Function: onTryHit],
  num: 77,
  accuracy: 75,
  basePower: 0,
  category: 'Status',
  pp: 35,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1, powder: 1 },
  status: 'psn',
  secondary: null,
  target: 'normal',
  type: 'Poison',
  zMove: { boost: { def: 1 } },
  contestType: 'Clever',
  desc: 'Poisons the target.',
  shortDesc: 'Poisons the target.',
  id: 'poisonpowder',
  fullname: 'move: Poison Powder',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Psywave',
  accuracy: 80,
  isNonstandard: null,
  num: 149,
  basePower: 0,
  damageCallback: [Function: damageCallback],
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: "Deals damage to the target equal to (user's level) * (X * 10 + 50) / 100, where X is a random number from 0 to 10, rounded down, but not less than 1 HP.",
  shortDesc: "Random damage equal to 0.5x-1.5x user's level.",
  id: 'psywave',
  fullname: 'move: Psywave',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Rock Tomb',
  accuracy: 80,
  basePower: 50,
  pp: 10,
  num: 317,
  category: 'Physical',
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 100, boosts: { spe: -1 } },
  target: 'normal',
  type: 'Rock',
  contestType: 'Clever',
  desc: "Has a 100% chance to lower the target's Speed by 1 stage.",
  shortDesc: "100% chance to lower the target's Speed by 1.",
  id: 'rocktomb',
  fullname: 'move: Rock Tomb',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Rock',
  secondaries: [ { chance: 100, boosts: { spe: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Screech',
  flags: { protect: 1, reflectable: 1, mirror: 1, sound: 1, metronome: 1 },
  num: 103,
  accuracy: 85,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  boosts: { def: -2 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { atk: 1 } },
  contestType: 'Clever',
  desc: "Lowers the target's Defense by 2 stages.",
  shortDesc: "Lowers the target's Defense by 2.",
  id: 'screech',
  fullname: 'move: Screech',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Sing',
  flags: { protect: 1, reflectable: 1, mirror: 1, sound: 1, metronome: 1 },
  num: 47,
  accuracy: 55,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  status: 'slp',
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Cute',
  desc: 'Causes the target to fall asleep.',
  shortDesc: 'Causes the target to fall asleep.',
  id: 'sing',
  fullname: 'move: Sing',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Skull Bash',
  basePower: 100,
  pp: 15,
  isNonstandard: null,
  num: 130,
  accuracy: 100,
  category: 'Physical',
  priority: 0,
  flags: {
    contact: 1,
    charge: 1,
    protect: 1,
    mirror: 1,
    metronome: 1,
    nosleeptalk: 1,
    failinstruct: 1
  },
  onTryMove: [Function: onTryMove],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: "This attack charges on the first turn and executes on the second. Raises the user's Defense by 1 stage on the first turn.",
  shortDesc: "Raises user's Defense by 1 on turn 1. Hits turn 2.",
  id: 'skullbash',
  fullname: 'move: Skull Bash',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Sleep Powder',
  onTryHit: [Function: onTryHit],
  num: 79,
  accuracy: 75,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1, powder: 1 },
  status: 'slp',
  secondary: null,
  target: 'normal',
  type: 'Grass',
  zMove: { boost: { spe: 1 } },
  contestType: 'Clever',
  desc: 'Causes the target to fall asleep.',
  shortDesc: 'Causes the target to fall asleep.',
  id: 'sleeppowder',
  fullname: 'move: Sleep Powder',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Smelling Salts',
  basePower: 60,
  isNonstandard: null,
  num: 265,
  accuracy: 100,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'Damage doubles if the target is paralyzed. If this move is successful, the target is cured of paralysis.',
  shortDesc: 'Damage doubles if target is paralyzed; cures it.',
  id: 'smellingsalts',
  fullname: 'move: Smelling Salts',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Smog',
  basePower: 20,
  num: 123,
  accuracy: 70,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 40, status: 'psn' },
  target: 'normal',
  type: 'Poison',
  contestType: 'Tough',
  desc: 'Has a 40% chance to poison the target.',
  shortDesc: '40% chance to poison the target.',
  id: 'smog',
  fullname: 'move: Smog',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: [ { chance: 40, status: 'psn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 70 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Spore',
  onTryHit: [Function: onTryHit],
  num: 147,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1, powder: 1 },
  status: 'slp',
  secondary: null,
  target: 'normal',
  type: 'Grass',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Beautiful',
  desc: 'Causes the target to fall asleep.',
  shortDesc: 'Causes the target to fall asleep.',
  id: 'spore',
  fullname: 'move: Spore',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'String Shot',
  boosts: { spe: -1 },
  num: 81,
  accuracy: 95,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Bug',
  zMove: { boost: { spe: 1 } },
  contestType: 'Clever',
  desc: "Lowers the target's Speed by 1 stage.",
  shortDesc: 'Lowers the foe(s) Speed by 1.',
  id: 'stringshot',
  fullname: 'move: String Shot',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Stun Spore',
  onTryHit: [Function: onTryHit],
  num: 78,
  accuracy: 75,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1, powder: 1 },
  status: 'par',
  secondary: null,
  target: 'normal',
  type: 'Grass',
  zMove: { boost: { spd: 1 } },
  contestType: 'Clever',
  desc: 'Paralyzes the target. This move does not ignore type immunity.',
  shortDesc: 'Paralyzes the target.',
  id: 'stunspore',
  fullname: 'move: Stun Spore',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Submission',
  pp: 25,
  isNonstandard: null,
  num: 66,
  accuracy: 80,
  basePower: 80,
  category: 'Physical',
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  recoil: [ 1, 4 ],
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: 'If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded down, but not less than 1 HP.',
  shortDesc: 'Has 1/4 recoil.',
  id: 'submission',
  fullname: 'move: Submission',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Supersonic',
  flags: { protect: 1, reflectable: 1, mirror: 1, sound: 1, metronome: 1 },
  num: 48,
  accuracy: 55,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  volatileStatus: 'confusion',
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Clever',
  desc: 'Causes the target to become confused.',
  shortDesc: 'Causes the target to become confused.',
  id: 'supersonic',
  fullname: 'move: Supersonic',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Sweet Kiss',
  type: 'Normal',
  num: 186,
  accuracy: 75,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'confusion',
  secondary: null,
  target: 'normal',
  zMove: { boost: { spa: 1 } },
  contestType: 'Cute',
  desc: 'Causes the target to become confused.',
  shortDesc: 'Causes the target to become confused.',
  id: 'sweetkiss',
  fullname: 'move: Sweet Kiss',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Sweet Scent',
  boosts: { evasion: -1 },
  num: 230,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Normal',
  zMove: { boost: { accuracy: 1 } },
  contestType: 'Cute',
  desc: "Lowers the target's evasiveness by 1 stage.",
  shortDesc: 'Lowers the foe(s) evasiveness by 1.',
  id: 'sweetscent',
  fullname: 'move: Sweet Scent',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Swords Dance',
  pp: 30,
  num: 14,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, dance: 1, metronome: 1 },
  boosts: { atk: 2 },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Beautiful',
  desc: "Raises the user's Attack by 2 stages.",
  shortDesc: "Raises the user's Attack by 2.",
  id: 'swordsdance',
  fullname: 'move: Swords Dance',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Thief',
  basePower: 40,
  pp: 10,
  num: 168,
  accuracy: 100,
  category: 'Special',
  priority: 0,
  flags: {
    contact: 1,
    protect: 1,
    mirror: 1,
    failmefirst: 1,
    noassist: 1,
    failcopycat: 1
  },
  onAfterHit: [Function: onAfterHit],
  secondary: null,
  target: 'normal',
  type: 'Dark',
  contestType: 'Tough',
  desc: "If this attack was successful and the user has not fainted, it steals the target's held item if the user is not holding one. The target's item is not stolen if it is a Mail or Enigma Berry. Items lost to this move cannot be regained with Recycle.",
  shortDesc: "If the user has no item, it steals the target's.",
  id: 'thief',
  fullname: 'move: Thief',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Thunder',
  basePower: 120,
  num: 87,
  accuracy: 70,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  onModifyMove: [Function: onModifyMove],
  secondary: { chance: 30, status: 'par' },
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: "Has a 30% chance to paralyze the target. This move can hit a target using Bounce or Fly. If the weather is Rain Dance, this move does not check accuracy. If the weather is Sunny Day, this move's accuracy is 50%.",
  shortDesc: "30% chance to paralyze. Can't miss in rain.",
  id: 'thunder',
  fullname: 'move: Thunder',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: [ { chance: 30, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Thunderbolt',
  basePower: 95,
  num: 85,
  accuracy: 100,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, status: 'par' },
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: 'Has a 10% chance to paralyze the target.',
  shortDesc: '10% chance to paralyze the target.',
  id: 'thunderbolt',
  fullname: 'move: Thunderbolt',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: [ { chance: 10, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Will-O-Wisp',
  accuracy: 75,
  num: 261,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  status: 'brn',
  secondary: null,
  target: 'normal',
  type: 'Fire',
  zMove: { boost: { atk: 1 } },
  contestType: 'Beautiful',
  desc: 'Burns the target.',
  shortDesc: 'Burns the target.',
  id: 'willowisp',
  fullname: 'move: Will-O-Wisp',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Destiny Bond',
  onPrepareHit: [Function: onPrepareHit],
  num: 194,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { bypasssub: 1, noassist: 1, failcopycat: 1 },
  volatileStatus: 'destinybond',
  condition: {
    onStart: [Function: onStart],
    onFaint: [Function: onFaint],
    onBeforeMovePriority: -1,
    onBeforeMove: [Function: onBeforeMove],
    onMoveAborted: [Function: onMoveAborted]
  },
  secondary: null,
  target: 'self',
  type: 'Ghost',
  zMove: { effect: 'redirect' },
  contestType: 'Clever',
  desc: "Until the user's next turn, if an opposing Pokemon's attack knocks the user out, that Pokemon faints as well, unless the attack was Doom Desire or Future Sight.",
  shortDesc: 'If an opponent knocks out the user, it also faints.',
  id: 'destinybond',
  fullname: 'move: Destiny Bond',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Sheer Cold',
  ohko: true,
  num: 329,
  accuracy: 30,
  basePower: 0,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Ice',
  zMove: { basePower: 180 },
  maxMove: { basePower: 130 },
  contestType: 'Beautiful',
  desc: "Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.",
  shortDesc: 'OHKOs the target. Fails if user is a lower level.',
  id: 'sheercold',
  fullname: 'move: Sheer Cold',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Swagger',
  accuracy: 90,
  num: 207,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, allyanim: 1, metronome: 1 },
  volatileStatus: 'confusion',
  boosts: { atk: 2 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: "Raises the target's Attack by 2 stages and confuses it.",
  shortDesc: "Raises the target's Attack by 2 and confuses it.",
  id: 'swagger',
  fullname: 'move: Swagger',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Thunder Wave',
  accuracy: 100,
  num: 86,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  status: 'par',
  ignoreImmunity: false,
  secondary: null,
  target: 'normal',
  type: 'Electric',
  zMove: { boost: { spd: 1 } },
  contestType: 'Cool',
  desc: 'Paralyzes the target. This move does not ignore type immunity.',
  shortDesc: 'Paralyzes the target.',
  id: 'thunderwave',
  fullname: 'move: Thunder Wave',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Barrage',
  isNonstandard: null,
  num: 140,
  accuracy: 85,
  basePower: 15,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'barrage',
  fullname: 'move: Barrage',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Bone Club',
  isNonstandard: null,
  num: 125,
  accuracy: 85,
  basePower: 65,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Ground',
  contestType: 'Tough',
  desc: 'Has a 10% chance to make the target flinch.',
  shortDesc: '10% chance to make the target flinch.',
  id: 'boneclub',
  fullname: 'move: Bone Club',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: [ { chance: 10, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Comet Punch',
  isNonstandard: null,
  num: 4,
  accuracy: 85,
  basePower: 18,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  maxMove: { basePower: 100 },
  contestType: 'Tough',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'cometpunch',
  fullname: 'move: Comet Punch',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Constrict',
  isNonstandard: null,
  num: 132,
  accuracy: 100,
  basePower: 10,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, boosts: { spe: -1 } },
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: "Has a 10% chance to lower the target's Speed by 1 stage.",
  shortDesc: "10% chance to lower the target's Speed by 1.",
  id: 'constrict',
  fullname: 'move: Constrict',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 10, boosts: { spe: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Dizzy Punch',
  isNonstandard: null,
  num: 146,
  accuracy: 100,
  basePower: 70,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: { chance: 20, volatileStatus: 'confusion' },
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: 'Has a 20% chance to confuse the target.',
  shortDesc: '20% chance to confuse the target.',
  id: 'dizzypunch',
  fullname: 'move: Dizzy Punch',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 20, volatileStatus: 'confusion' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Double Slap',
  isNonstandard: null,
  num: 3,
  accuracy: 85,
  basePower: 15,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'doubleslap',
  fullname: 'move: Double Slap',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Dragon Rage',
  isNonstandard: null,
  num: 82,
  accuracy: 100,
  basePower: 0,
  damage: 40,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Dragon',
  contestType: 'Cool',
  desc: 'Deals 40 HP of damage to the target.',
  shortDesc: 'Deals 40 HP of damage to the target.',
  id: 'dragonrage',
  fullname: 'move: Dragon Rage',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dragon',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Egg Bomb',
  isNonstandard: null,
  num: 121,
  accuracy: 75,
  basePower: 100,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'eggbomb',
  fullname: 'move: Egg Bomb',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Frustration',
  isNonstandard: null,
  num: 218,
  accuracy: 100,
  basePower: 0,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { basePower: 160 },
  maxMove: { basePower: 130 },
  contestType: 'Cute',
  desc: "Power is equal to the greater of ((255 - user's Happiness) * 2/5), rounded down, or 1.",
  shortDesc: 'Max 102 power at minimum Happiness.',
  id: 'frustration',
  fullname: 'move: Frustration',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Howl',
  flags: { snatch: 1, metronome: 1 },
  boosts: { atk: 1 },
  target: 'self',
  num: 336,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  secondary: null,
  type: 'Normal',
  zMove: { boost: { atk: 1 } },
  contestType: 'Cool',
  desc: "Raises the user's Attack by 1 stage.",
  shortDesc: "Raises the user's Attack by 1.",
  id: 'howl',
  fullname: 'move: Howl',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Hyper Fang',
  isNonstandard: null,
  num: 158,
  accuracy: 90,
  basePower: 80,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1 },
  secondary: { chance: 10, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'Has a 10% chance to make the target flinch.',
  shortDesc: '10% chance to make the target flinch.',
  id: 'hyperfang',
  fullname: 'move: Hyper Fang',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 10, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Ice Ball',
  isNonstandard: null,
  num: 301,
  accuracy: 90,
  basePower: 30,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: {
    contact: 1,
    protect: 1,
    mirror: 1,
    metronome: 1,
    failinstruct: 1,
    bullet: 1,
    noparentalbond: 1
  },
  onModifyMove: [Function: onModifyMove],
  onAfterMove: [Function: onAfterMove],
  condition: {
    duration: 1,
    onLockMove: 'iceball',
    onStart: [Function: onStart],
    onResidual: [Function: onResidual]
  },
  secondary: null,
  target: 'normal',
  type: 'Ice',
  contestType: 'Beautiful',
  desc: 'If this move is successful, the user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn.',
  shortDesc: 'Power doubles with each hit. Repeats for 5 turns.',
  id: 'iceball',
  fullname: 'move: Ice Ball',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Karate Chop',
  isNonstandard: null,
  num: 2,
  accuracy: 100,
  basePower: 50,
  category: 'Physical',
  pp: 25,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  critRatio: 2,
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Tough',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio.',
  id: 'karatechop',
  fullname: 'move: Karate Chop',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 75 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Low Kick',
  onTryHit: [Function: onTryHit],
  num: 67,
  accuracy: 100,
  basePower: 0,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  zMove: { basePower: 160 },
  contestType: 'Tough',
  desc: "This move's power is 20 if the target weighs less than 10 kg, 40 if less than 25 kg, 60 if less than 50 kg, 80 if less than 100 kg, 100 if less than 200 kg, and 120 if greater than or equal to 200 kg.",
  shortDesc: 'More power the heavier the target.',
  id: 'lowkick',
  fullname: 'move: Low Kick',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Magnitude',
  isNonstandard: null,
  num: 222,
  accuracy: 100,
  basePower: 0,
  category: 'Physical',
  pp: 30,
  priority: 0,
  flags: { protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  onModifyMove: [Function: onModifyMove],
  onUseMoveMessage: [Function: onUseMoveMessage],
  secondary: null,
  target: 'allAdjacent',
  type: 'Ground',
  zMove: { basePower: 140 },
  maxMove: { basePower: 140 },
  contestType: 'Tough',
  desc: 'The power of this move varies. 5% chances for 10 and 150 power, 10% chances for 30 and 110 power, 20% chances for 50 and 90 power, and 30% chance for 70 power. Power doubles if the target is using Dig.',
  shortDesc: 'Hits adjacent Pokemon. Power varies; 2x on Dig.',
  id: 'magnitude',
  fullname: 'move: Magnitude',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Meditate',
  isNonstandard: null,
  num: 96,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { atk: 1 },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { boost: { atk: 1 } },
  contestType: 'Beautiful',
  desc: "Raises the user's Attack by 1 stage.",
  shortDesc: "Raises the user's Attack by 1.",
  id: 'meditate',
  fullname: 'move: Meditate',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Psycho Boost',
  isNonstandard: null,
  num: 354,
  accuracy: 90,
  basePower: 140,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  self: { boosts: { spa: -2 } },
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: "Lowers the user's Special Attack by 2 stages.",
  shortDesc: "Lowers the user's Sp. Atk by 2.",
  id: 'psychoboost',
  fullname: 'move: Psycho Boost',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Rage',
  isNonstandard: null,
  num: 99,
  accuracy: 100,
  basePower: 20,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  self: { volatileStatus: 'rage' },
  condition: {
    onStart: [Function: onStart],
    onHit: [Function: onHit],
    onBeforeMovePriority: 100,
    onBeforeMove: [Function: onBeforeMove]
  },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: "Once this move is used and unless the target protected itself, the user's Attack is raised by 1 stage every time it is hit by another Pokemon's attack as long as this move is chosen for use.",
  shortDesc: "Raises the user's Attack by 1 if hit during use.",
  id: 'rage',
  fullname: 'move: Rage',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Razor Wind',
  isNonstandard: null,
  num: 13,
  accuracy: 100,
  basePower: 80,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: {
    charge: 1,
    protect: 1,
    mirror: 1,
    metronome: 1,
    nosleeptalk: 1,
    failinstruct: 1
  },
  onTryMove: [Function: onTryMove],
  critRatio: 2,
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'This attack charges on the first turn and executes on the second.',
  shortDesc: 'Charges, then hits foe(s) turn 2.',
  id: 'razorwind',
  fullname: 'move: Razor Wind',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Refresh',
  isNonstandard: null,
  num: 287,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  onHit: [Function: onHit],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'heal' },
  contestType: 'Cute',
  desc: 'The user cures its burn, poison, or paralysis. Fails if the user is not burned, poisoned, or paralyzed.',
  shortDesc: 'User cures its burn, poison, or paralysis.',
  id: 'refresh',
  fullname: 'move: Refresh',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Return',
  isNonstandard: null,
  num: 216,
  accuracy: 100,
  basePower: 0,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { basePower: 160 },
  maxMove: { basePower: 130 },
  contestType: 'Cute',
  desc: "Power is equal to the greater of (user's Happiness * 2/5), rounded down, or 1.",
  shortDesc: 'Max 102 power at maximum Happiness.',
  id: 'return',
  fullname: 'move: Return',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Rolling Kick',
  isNonstandard: null,
  num: 27,
  accuracy: 85,
  basePower: 60,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: 'Has a 30% chance to make the target flinch.',
  shortDesc: '30% chance to make the target flinch.',
  id: 'rollingkick',
  fullname: 'move: Rolling Kick',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 80 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Sharpen',
  isNonstandard: null,
  num: 159,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { atk: 1 },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { atk: 1 } },
  contestType: 'Cute',
  desc: "Raises the user's Attack by 1 stage.",
  shortDesc: "Raises the user's Attack by 1.",
  id: 'sharpen',
  fullname: 'move: Sharpen',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Signal Beam',
  isNonstandard: null,
  num: 324,
  accuracy: 100,
  basePower: 75,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, volatileStatus: 'confusion' },
  target: 'normal',
  type: 'Bug',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to confuse the target.',
  shortDesc: '10% chance to confuse the target.',
  id: 'signalbeam',
  fullname: 'move: Signal Beam',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: [ { chance: 10, volatileStatus: 'confusion' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Silver Wind',
  isNonstandard: null,
  num: 318,
  accuracy: 100,
  basePower: 60,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: {
    chance: 10,
    self: { boosts: { atk: 1, def: 1, spa: 1, spd: 1, spe: 1 } }
  },
  target: 'normal',
  type: 'Bug',
  contestType: 'Beautiful',
  desc: "Has a 10% chance to raise the user's Attack, Defense, Special Attack, Special Defense, and Speed by 1 stage.",
  shortDesc: '10% chance to raise all stats by 1 (not acc/eva).',
  id: 'silverwind',
  fullname: 'move: Silver Wind',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: [
    {
      chance: 10,
      self: { boosts: { atk: 1, def: 1, spa: 1, spd: 1, spe: 1 } }
    }
  ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Sky Uppercut',
  isNonstandard: null,
  num: 327,
  accuracy: 90,
  basePower: 85,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: 'This move can hit a target using Bounce or Fly.',
  shortDesc: 'Can hit Pokemon using Bounce or Fly.',
  id: 'skyuppercut',
  fullname: 'move: Sky Uppercut',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Sonic Boom',
  isNonstandard: null,
  num: 49,
  accuracy: 90,
  basePower: 0,
  damage: 20,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'Deals 20 HP of damage to the target.',
  shortDesc: 'Always does 20 HP of damage.',
  id: 'sonicboom',
  fullname: 'move: Sonic Boom',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Spider Web',
  isNonstandard: null,
  num: 169,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Bug',
  zMove: { boost: { def: 1 } },
  contestType: 'Clever',
  desc: 'Prevents the target from switching out. The target can still switch out if it uses Baton Pass. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field, unless it uses Baton Pass, in which case the target will remain trapped.',
  shortDesc: 'Prevents the target from switching out.',
  id: 'spiderweb',
  fullname: 'move: Spider Web',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Spike Cannon',
  isNonstandard: null,
  num: 131,
  accuracy: 100,
  basePower: 20,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  maxMove: { basePower: 120 },
  contestType: 'Cool',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'spikecannon',
  fullname: 'move: Spike Cannon',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Swallow',
  onHit: [Function: onHit],
  num: 256,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  onTry: [Function: onTry],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Tough',
  desc: "The user restores its HP based on its Stockpile count. Restores 1/4 of its maximum HP if it's 1, 1/2 of its maximum HP if it's 2, both rounded half down, and all of its HP if it's 3. Fails if the user's Stockpile count is 0. The user's Stockpile count resets to 0.",
  shortDesc: 'Heals the user based on uses of Stockpile.',
  id: 'swallow',
  fullname: 'move: Swallow',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Teleport',
  priority: 0,
  selfSwitch: undefined,
  onTry: false,
  num: 100,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  flags: { metronome: 1 },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { effect: 'heal' },
  contestType: 'Cool',
  desc: 'Fails when used.',
  shortDesc: 'Fails when used.',
  id: 'teleport',
  fullname: 'move: Teleport',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Twineedle',
  isNonstandard: null,
  num: 41,
  accuracy: 100,
  basePower: 25,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  multihit: 2,
  secondary: { chance: 20, status: 'psn' },
  target: 'normal',
  type: 'Bug',
  maxMove: { basePower: 100 },
  contestType: 'Cool',
  desc: "Hits twice, with each hit having a 20% chance to poison the target. If the first hit breaks the target's substitute, it will take damage for the second hit.",
  shortDesc: 'Hits 2 times. Each hit has 20% chance to poison.',
  id: 'twineedle',
  fullname: 'move: Twineedle',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: [ { chance: 20, status: 'psn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Bonemerang',
  isNonstandard: null,
  num: 155,
  accuracy: 90,
  basePower: 50,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  multihit: 2,
  secondary: null,
  target: 'normal',
  type: 'Ground',
  maxMove: { basePower: 130 },
  contestType: 'Tough',
  desc: "Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.",
  shortDesc: 'Hits 2 times in one turn.',
  id: 'bonemerang',
  fullname: 'move: Bonemerang',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Cut',
  isNonstandard: null,
  num: 15,
  accuracy: 95,
  basePower: 50,
  category: 'Physical',
  pp: 30,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'cut',
  fullname: 'move: Cut',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Grudge',
  isNonstandard: null,
  num: 288,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { bypasssub: 1, metronome: 1 },
  volatileStatus: 'grudge',
  condition: {
    onStart: [Function: onStart],
    onFaint: [Function: onFaint],
    onBeforeMovePriority: 100,
    onBeforeMove: [Function: onBeforeMove]
  },
  secondary: null,
  target: 'self',
  type: 'Ghost',
  zMove: { effect: 'redirect' },
  contestType: 'Tough',
  desc: "Until the user's next turn, if an opposing Pokemon's attack knocks the user out, that move loses all its remaining PP.",
  shortDesc: 'If the user faints, the attack used loses all its PP.',
  id: 'grudge',
  fullname: 'move: Grudge',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Hail',
  isNonstandard: null,
  num: 258,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { metronome: 1 },
  weather: 'hail',
  secondary: null,
  target: 'all',
  type: 'Ice',
  zMove: { boost: { spe: 1 } },
  contestType: 'Beautiful',
  desc: 'For 5 turns, the weather becomes Hail. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are an Ice type. Fails if the current weather is Hail.',
  shortDesc: 'For 5 turns, hail crashes down.',
  id: 'hail',
  fullname: 'move: Hail',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Kinesis',
  isNonstandard: null,
  num: 134,
  accuracy: 80,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  boosts: { accuracy: -1 },
  secondary: null,
  target: 'normal',
  type: 'Psychic',
  zMove: { boost: { evasion: 1 } },
  contestType: 'Clever',
  desc: "Lowers the target's accuracy by 1 stage.",
  shortDesc: "Lowers the target's accuracy by 1.",
  id: 'kinesis',
  fullname: 'move: Kinesis',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Lovely Kiss',
  isNonstandard: null,
  num: 142,
  accuracy: 75,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  status: 'slp',
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { spe: 1 } },
  contestType: 'Beautiful',
  desc: 'Causes the target to fall asleep.',
  shortDesc: 'Causes the target to fall asleep.',
  id: 'lovelykiss',
  fullname: 'move: Lovely Kiss',
  effectType: 'Move',
  gen: 1,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Luster Purge',
  basePower: 70,
  num: 295,
  accuracy: 100,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 50, boosts: { spd: -1 } },
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: "Has a 50% chance to lower the target's Special Defense by 1 stage.",
  shortDesc: "50% chance to lower the target's Sp. Def by 1.",
  id: 'lusterpurge',
  fullname: 'move: Luster Purge',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: [ { chance: 50, boosts: { spd: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Milk Drink',
  pp: 10,
  num: 208,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  heal: [ 1, 2 ],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: 'The user restores 1/2 of its maximum HP, rounded down.',
  shortDesc: 'Heals the user by 50% of its max HP.',
  id: 'milkdrink',
  fullname: 'move: Milk Drink',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Mist Ball',
  basePower: 70,
  num: 296,
  accuracy: 100,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  secondary: { chance: 50, boosts: { spa: -1 } },
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: "Has a 50% chance to lower the target's Special Attack by 1 stage.",
  shortDesc: "50% chance to lower the target's Sp. Atk by 1.",
  id: 'mistball',
  fullname: 'move: Mist Ball',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: [ { chance: 50, boosts: { spa: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Octazooka',
  isNonstandard: null,
  num: 190,
  accuracy: 85,
  basePower: 65,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  secondary: { chance: 50, boosts: { accuracy: -1 } },
  target: 'normal',
  type: 'Water',
  contestType: 'Tough',
  desc: "Has a 50% chance to lower the target's accuracy by 1 stage.",
  shortDesc: "50% chance to lower the target's accuracy by 1.",
  id: 'octazooka',
  fullname: 'move: Octazooka',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: [ { chance: 50, boosts: { accuracy: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Rest',
  pp: 10,
  num: 156,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  onTry: [Function: onTry],
  onHit: [Function: onHit],
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: 'The user falls asleep for the next two turns and restores all of its HP, curing itself of any non-volatile status condition in the process. Fails if the user has full HP, is already asleep, or if another effect is preventing sleep.',
  shortDesc: 'User sleeps 2 turns and restores HP and status.',
  id: 'rest',
  fullname: 'move: Rest',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Revenge',
  isNonstandard: null,
  num: 279,
  accuracy: 100,
  basePower: 60,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 10,
  priority: -4,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Tough',
  desc: "Damage doubles if the user was hit by a Pokemon in the target's current position this turn, and that Pokemon was the last to hit the user.",
  shortDesc: 'Damage doubles if user is hit by the target.',
  id: 'revenge',
  fullname: 'move: Revenge',
  effectType: 'Move',
  gen: 3,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 80 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Slack Off',
  pp: 10,
  num: 303,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  heal: [ 1, 2 ],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: 'The user restores 1/2 of its maximum HP, rounded down.',
  shortDesc: 'Heals the user by 50% of its max HP.',
  id: 'slackoff',
  fullname: 'move: Slack Off',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Soft-Boiled',
  pp: 10,
  num: 135,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  priority: 0,
  flags: { snatch: 1, heal: 1, metronome: 1 },
  heal: [ 1, 2 ],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: 'The user restores 1/2 of its maximum HP, rounded down.',
  shortDesc: 'Heals the user by 50% of its max HP.',
  id: 'softboiled',
  fullname: 'move: Soft-Boiled',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Vital Throw',
  isNonstandard: null,
  num: 233,
  accuracy: true,
  basePower: 70,
  category: 'Physical',
  pp: 10,
  priority: -1,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: 'This move does not check accuracy.',
  shortDesc: 'This move does not check accuracy. Goes last.',
  id: 'vitalthrow',
  fullname: 'move: Vital Throw',
  effectType: 'Move',
  gen: 2,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 85 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Aerial Ace',
  num: 332,
  accuracy: true,
  basePower: 60,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: {
    contact: 1,
    protect: 1,
    mirror: 1,
    distance: 1,
    metronome: 1,
    slicing: 1
  },
  secondary: null,
  target: 'any',
  type: 'Flying',
  contestType: 'Cool',
  desc: 'This move does not check accuracy.',
  shortDesc: 'This move does not check accuracy.',
  id: 'aerialace',
  fullname: 'move: Aerial Ace',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Aeroblast',
  num: 177,
  accuracy: 95,
  basePower: 100,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, distance: 1, metronome: 1, wind: 1 },
  critRatio: 2,
  secondary: null,
  target: 'any',
  type: 'Flying',
  contestType: 'Cool',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio.',
  id: 'aeroblast',
  fullname: 'move: Aeroblast',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Agility',
  num: 97,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { spe: 2 },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cool',
  desc: "Raises the user's Speed by 2 stages.",
  shortDesc: "Raises the user's Speed by 2.",
  id: 'agility',
  fullname: 'move: Agility',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Amnesia',
  num: 133,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { spd: 2 },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: "Raises the user's Special Defense by 2 stages.",
  shortDesc: "Raises the user's Sp. Def by 2.",
  id: 'amnesia',
  fullname: 'move: Amnesia',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Arm Thrust',
  num: 292,
  accuracy: 100,
  basePower: 15,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Tough',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'armthrust',
  fullname: 'move: Arm Thrust',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 70 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Attract',
  num: 213,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, bypasssub: 1, metronome: 1 },
  volatileStatus: 'attract',
  condition: {
    noCopy: true,
    onStart: [Function: onStart],
    onUpdate: [Function: onUpdate],
    onBeforeMovePriority: 2,
    onBeforeMove: [Function: onBeforeMove],
    onEnd: [Function: onEnd]
  },
  onTryImmunity: [Function: onTryImmunity],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: 'Causes the target to become infatuated, making it unable to attack 50% of the time. Fails if both the user and the target are the same gender, if either is genderless, or if the target is already infatuated. The effect ends when either the user or the target is no longer active. Pokemon with the Oblivious Ability are immune.',
  shortDesc: 'A target of the opposite gender gets infatuated.',
  id: 'attract',
  fullname: 'move: Attract',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Aurora Beam',
  num: 62,
  accuracy: 100,
  basePower: 65,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, boosts: { atk: -1 } },
  target: 'normal',
  type: 'Ice',
  contestType: 'Beautiful',
  desc: "Has a 10% chance to lower the target's Attack by 1 stage.",
  shortDesc: "10% chance to lower the target's Attack by 1.",
  id: 'aurorabeam',
  fullname: 'move: Aurora Beam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: [ { chance: 10, boosts: { atk: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Baton Pass',
  num: 226,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { metronome: 1 },
  onHit: [Function: onHit],
  self: { onHit: [Function: onHit] },
  selfSwitch: 'copyvolatile',
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cute',
  desc: "The user is replaced with another Pokemon in its party. The selected Pokemon has the user's stat stage changes, confusion, and certain move effects transferred to it.",
  shortDesc: 'User switches, passing stat changes and more.',
  id: 'batonpass',
  fullname: 'move: Baton Pass',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Belly Drum',
  num: 187,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  onHit: [Function: onHit],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'heal' },
  contestType: 'Cute',
  desc: "Raises the user's Attack by 12 stages in exchange for the user losing 1/2 of its maximum HP, rounded down. Fails if the user would faint or if its Attack stat stage is 6.",
  shortDesc: 'User loses 50% max HP. Maximizes Attack.',
  id: 'bellydrum',
  fullname: 'move: Belly Drum',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Bite',
  num: 44,
  accuracy: 100,
  basePower: 60,
  category: 'Special',
  pp: 25,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, bite: 1 },
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Dark',
  contestType: 'Tough',
  desc: 'Has a 30% chance to make the target flinch.',
  shortDesc: '30% chance to make the target flinch.',
  id: 'bite',
  fullname: 'move: Bite',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Blast Burn',
  num: 307,
  accuracy: 90,
  basePower: 150,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { recharge: 1, protect: 1, mirror: 1, metronome: 1 },
  self: { volatileStatus: 'mustrecharge' },
  secondary: null,
  target: 'normal',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: 'If this move is successful, the user must recharge on the following turn and cannot select a move.',
  shortDesc: 'User cannot move next turn.',
  id: 'blastburn',
  fullname: 'move: Blast Burn',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Blaze Kick',
  num: 299,
  accuracy: 90,
  basePower: 85,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  critRatio: 2,
  secondary: { chance: 10, status: 'brn' },
  target: 'normal',
  type: 'Fire',
  contestType: 'Cool',
  desc: 'Has a 10% chance to burn the target and a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio. 10% chance to burn.',
  id: 'blazekick',
  fullname: 'move: Blaze Kick',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Fire',
  secondaries: [ { chance: 10, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Body Slam',
  num: 34,
  accuracy: 100,
  basePower: 85,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  secondary: { chance: 30, status: 'par' },
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'Has a 30% chance to paralyze the target.',
  shortDesc: '30% chance to paralyze the target.',
  id: 'bodyslam',
  fullname: 'move: Body Slam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 30, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Bubble Beam',
  num: 61,
  accuracy: 100,
  basePower: 65,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, boosts: { spe: -1 } },
  target: 'normal',
  type: 'Water',
  contestType: 'Beautiful',
  desc: "Has a 10% chance to lower the target's Speed by 1 stage.",
  shortDesc: "10% chance to lower the target's Speed by 1.",
  id: 'bubblebeam',
  fullname: 'move: Bubble Beam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: [ { chance: 10, boosts: { spe: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Bulk Up',
  num: 339,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { atk: 1, def: 1 },
  secondary: null,
  target: 'self',
  type: 'Fighting',
  zMove: { boost: { atk: 1 } },
  contestType: 'Cool',
  desc: "Raises the user's Attack and Defense by 1 stage.",
  shortDesc: "Raises the user's Attack and Defense by 1.",
  id: 'bulkup',
  fullname: 'move: Bulk Up',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Calm Mind',
  num: 347,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { spa: 1, spd: 1 },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Clever',
  desc: "Raises the user's Special Attack and Special Defense by 1 stage.",
  shortDesc: "Raises the user's Sp. Atk and Sp. Def by 1.",
  id: 'calmmind',
  fullname: 'move: Calm Mind',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Confuse Ray',
  num: 109,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  volatileStatus: 'confusion',
  secondary: null,
  target: 'normal',
  type: 'Ghost',
  zMove: { boost: { spa: 1 } },
  contestType: 'Clever',
  desc: 'Causes the target to become confused.',
  shortDesc: 'Confuses the target.',
  id: 'confuseray',
  fullname: 'move: Confuse Ray',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Confusion',
  num: 93,
  accuracy: 100,
  basePower: 50,
  category: 'Special',
  pp: 25,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, volatileStatus: 'confusion' },
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: 'Has a 10% chance to confuse the target.',
  shortDesc: '10% chance to confuse the target.',
  id: 'confusion',
  fullname: 'move: Confusion',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: [ { chance: 10, volatileStatus: 'confusion' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Conversion 2',
  num: 176,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { bypasssub: 1, metronome: 1 },
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { effect: 'heal' },
  contestType: 'Beautiful',
  desc: "The user's type changes to match a type that resists or is immune to the type of the last move used against the user, if it was successful against the user, but not either of its current types. The determined type of the move is used rather than the original type, but considers Struggle as Normal. Fails if the last move used against the user was not successful, or if this move would only be able to select one of the user's current types.",
  shortDesc: "User's type changes to resist last move against it.",
  id: 'conversion2',
  fullname: 'move: Conversion 2',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Cosmic Power',
  num: 322,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { def: 1, spd: 1 },
  secondary: null,
  target: 'self',
  type: 'Psychic',
  zMove: { boost: { spd: 1 } },
  contestType: 'Beautiful',
  desc: "Raises the user's Defense and Special Defense by 1 stage.",
  shortDesc: "Raises the user's Defense and Sp. Def by 1.",
  id: 'cosmicpower',
  fullname: 'move: Cosmic Power',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Cross Chop',
  num: 238,
  accuracy: 80,
  basePower: 100,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  critRatio: 2,
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio.',
  id: 'crosschop',
  fullname: 'move: Cross Chop',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Crush Claw',
  num: 306,
  accuracy: 95,
  basePower: 75,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 50, boosts: { def: -1 } },
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: "Has a 50% chance to lower the target's Defense by 1 stage.",
  shortDesc: "50% chance to lower the target's Defense by 1.",
  id: 'crushclaw',
  fullname: 'move: Crush Claw',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 50, boosts: { def: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Defense Curl',
  num: 111,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { def: 1 },
  volatileStatus: 'defensecurl',
  condition: { noCopy: true, onRestart: [Function: onRestart] },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { accuracy: 1 } },
  contestType: 'Cute',
  desc: "Raises the user's Defense by 1 stage. As long as the user remains active, the power of the user's Ice Ball and Rollout will be doubled (this effect is not stackable).",
  shortDesc: "Raises the user's Defense by 1.",
  id: 'defensecurl',
  fullname: 'move: Defense Curl',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Double Kick',
  num: 24,
  accuracy: 100,
  basePower: 30,
  category: 'Physical',
  pp: 30,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  multihit: 2,
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  maxMove: { basePower: 80 },
  contestType: 'Cool',
  desc: "Hits twice. If the first hit breaks the target's substitute, it will take damage for the second hit.",
  shortDesc: 'Hits 2 times in one turn.',
  id: 'doublekick',
  fullname: 'move: Double Kick',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Double Team',
  num: 104,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { evasion: 1 },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cool',
  desc: "Raises the user's evasiveness by 1 stage.",
  shortDesc: "Raises the user's evasiveness by 1.",
  id: 'doubleteam',
  fullname: 'move: Double Team',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Dragon Breath',
  num: 225,
  accuracy: 100,
  basePower: 60,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, status: 'par' },
  target: 'normal',
  type: 'Dragon',
  contestType: 'Cool',
  desc: 'Has a 30% chance to paralyze the target.',
  shortDesc: '30% chance to paralyze the target.',
  id: 'dragonbreath',
  fullname: 'move: Dragon Breath',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dragon',
  secondaries: [ { chance: 30, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Dragon Claw',
  num: 337,
  accuracy: 100,
  basePower: 80,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Dragon',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'dragonclaw',
  fullname: 'move: Dragon Claw',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dragon',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Dragon Dance',
  num: 349,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { snatch: 1, dance: 1, metronome: 1 },
  boosts: { atk: 1, spe: 1 },
  secondary: null,
  target: 'self',
  type: 'Dragon',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Cool',
  desc: "Raises the user's Attack and Speed by 1 stage.",
  shortDesc: "Raises the user's Attack and Speed by 1.",
  id: 'dragondance',
  fullname: 'move: Dragon Dance',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dragon',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Drill Peck',
  num: 65,
  accuracy: 100,
  basePower: 80,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, distance: 1, metronome: 1 },
  secondary: null,
  target: 'any',
  type: 'Flying',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'drillpeck',
  fullname: 'move: Drill Peck',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Dynamic Punch',
  num: 223,
  accuracy: 50,
  basePower: 100,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: { chance: 100, volatileStatus: 'confusion' },
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: 'Has a 100% chance to confuse the target.',
  shortDesc: '100% chance to confuse the target.',
  id: 'dynamicpunch',
  fullname: 'move: Dynamic Punch',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: [ { chance: 100, volatileStatus: 'confusion' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Earthquake',
  num: 89,
  accuracy: 100,
  basePower: 100,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  secondary: null,
  target: 'allAdjacent',
  type: 'Ground',
  contestType: 'Tough',
  desc: 'Power doubles if the target is using Dig.',
  shortDesc: 'Hits adjacent Pokemon. Power doubles on Dig.',
  id: 'earthquake',
  fullname: 'move: Earthquake',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Ember',
  num: 52,
  accuracy: 100,
  basePower: 40,
  category: 'Special',
  pp: 25,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, status: 'brn' },
  target: 'normal',
  type: 'Fire',
  contestType: 'Cute',
  desc: 'Has a 10% chance to burn the target.',
  shortDesc: '10% chance to burn the target.',
  id: 'ember',
  fullname: 'move: Ember',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: [ { chance: 10, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Endure',
  num: 203,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 4,
  flags: { noassist: 1, failcopycat: 1 },
  stallingMove: true,
  volatileStatus: 'endure',
  onPrepareHit: [Function: onPrepareHit],
  onHit: [Function: onHit],
  condition: {
    duration: 1,
    onStart: [Function: onStart],
    onDamagePriority: -10,
    onDamage: [Function: onDamage]
  },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Tough',
  desc: "The user will survive attacks made by other Pokemon during this turn with at least 1 HP. This move has an X/65536 chance of being successful, where X starts at 65535 and halves, rounded down, each time this move is successfully used. After the fourth successful use in a row, X drops to 118 and continues with seemingly random values from 0-65535 on subsequent successful uses. X resets to 65535 if this move fails or if the user's last move used is not Detect, Endure, or Protect. Fails if the user moves last this turn.",
  shortDesc: 'User survives attacks this turn with at least 1 HP.',
  id: 'endure',
  fullname: 'move: Endure',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Eruption',
  num: 284,
  accuracy: 100,
  basePower: 150,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: "Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.",
  shortDesc: "Less power as user's HP decreases. Hits foe(s).",
  id: 'eruption',
  fullname: 'move: Eruption',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Explosion',
  num: 153,
  accuracy: 100,
  basePower: 250,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, noparentalbond: 1 },
  selfdestruct: 'always',
  secondary: null,
  target: 'allAdjacent',
  type: 'Normal',
  contestType: 'Beautiful',
  desc: "The user faints after using this move. The target's Defense is halved during damage calculation. This move is prevented from executing if any active Pokemon has the Damp Ability.",
  shortDesc: "Target's Def halved during damage. User faints.",
  id: 'explosion',
  fullname: 'move: Explosion',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Facade',
  num: 263,
  accuracy: 100,
  basePower: 70,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  onBasePower: [Function: onBasePower],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: 'Power doubles if the user is burned, paralyzed, or poisoned.',
  shortDesc: 'Power doubles if user is burn/poison/paralyzed.',
  id: 'facade',
  fullname: 'move: Facade',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Fake Tears',
  num: 313,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, allyanim: 1, metronome: 1 },
  boosts: { spd: -2 },
  secondary: null,
  target: 'normal',
  type: 'Dark',
  zMove: { boost: { spa: 1 } },
  contestType: 'Cute',
  desc: "Lowers the target's Special Defense by 2 stages.",
  shortDesc: "Lowers the target's Sp. Def by 2.",
  id: 'faketears',
  fullname: 'move: Fake Tears',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'False Swipe',
  num: 206,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 40,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  onDamagePriority: -20,
  onDamage: [Function: onDamage],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'Leaves the target with at least 1 HP.',
  shortDesc: 'Always leaves the target with at least 1 HP.',
  id: 'falseswipe',
  fullname: 'move: False Swipe',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Feather Dance',
  num: 297,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: {
    protect: 1,
    reflectable: 1,
    mirror: 1,
    dance: 1,
    allyanim: 1,
    metronome: 1
  },
  boosts: { atk: -2 },
  secondary: null,
  target: 'normal',
  type: 'Flying',
  zMove: { boost: { def: 1 } },
  contestType: 'Beautiful',
  desc: "Lowers the target's Attack by 2 stages.",
  shortDesc: "Lowers the target's Attack by 2.",
  id: 'featherdance',
  fullname: 'move: Feather Dance',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Fire Punch',
  num: 7,
  accuracy: 100,
  basePower: 75,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: { chance: 10, status: 'brn' },
  target: 'normal',
  type: 'Fire',
  contestType: 'Tough',
  desc: 'Has a 10% chance to burn the target.',
  shortDesc: '10% chance to burn the target.',
  id: 'firepunch',
  fullname: 'move: Fire Punch',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: [ { chance: 10, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Fissure',
  num: 90,
  accuracy: 30,
  basePower: 0,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  ohko: true,
  secondary: null,
  target: 'normal',
  type: 'Ground',
  zMove: { basePower: 180 },
  maxMove: { basePower: 130 },
  contestType: 'Tough',
  desc: "Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.",
  shortDesc: 'OHKOs the target. Fails if user is a lower level.',
  id: 'fissure',
  fullname: 'move: Fissure',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Flame Wheel',
  num: 172,
  accuracy: 100,
  basePower: 60,
  category: 'Special',
  pp: 25,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, defrost: 1, metronome: 1 },
  secondary: { chance: 10, status: 'brn' },
  target: 'normal',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to burn the target.',
  shortDesc: '10% chance to burn the target. Thaws user.',
  id: 'flamewheel',
  fullname: 'move: Flame Wheel',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: [ { chance: 10, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Flatter',
  num: 260,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, allyanim: 1, metronome: 1 },
  volatileStatus: 'confusion',
  boosts: { spa: 1 },
  secondary: null,
  target: 'normal',
  type: 'Dark',
  zMove: { boost: { spd: 1 } },
  contestType: 'Clever',
  desc: "Raises the target's Special Attack by 1 stage and confuses it.",
  shortDesc: "Raises the target's Sp. Atk by 1 and confuses it.",
  id: 'flatter',
  fullname: 'move: Flatter',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dark',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Focus Energy',
  num: 116,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  volatileStatus: 'focusenergy',
  condition: {
    onStart: [Function: onStart],
    onModifyCritRatio: [Function: onModifyCritRatio]
  },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { accuracy: 1 } },
  contestType: 'Cool',
  desc: "Raises the user's chance for a critical hit by 2 stages. Fails if the user already has the effect. Baton Pass can be used to transfer this effect to an ally.",
  shortDesc: "Raises the user's critical hit ratio by 2.",
  id: 'focusenergy',
  fullname: 'move: Focus Energy',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Frenzy Plant',
  num: 338,
  accuracy: 90,
  basePower: 150,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { recharge: 1, protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  self: { volatileStatus: 'mustrecharge' },
  secondary: null,
  target: 'normal',
  type: 'Grass',
  contestType: 'Cool',
  desc: 'If this move is successful, the user must recharge on the following turn and cannot select a move.',
  shortDesc: 'User cannot move next turn.',
  id: 'frenzyplant',
  fullname: 'move: Frenzy Plant',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Fury Attack',
  num: 31,
  accuracy: 85,
  basePower: 15,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'furyattack',
  fullname: 'move: Fury Attack',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Fury Swipes',
  num: 154,
  accuracy: 80,
  basePower: 18,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  multihit: [ 2, 5 ],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  maxMove: { basePower: 100 },
  contestType: 'Tough',
  desc: "Hits two to five times. Has a 3/8 chance to hit two or three times, and a 1/8 chance to hit four or five times. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 2-5 times in one turn.',
  id: 'furyswipes',
  fullname: 'move: Fury Swipes',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Guillotine',
  num: 12,
  accuracy: 30,
  basePower: 0,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  ohko: true,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { basePower: 180 },
  maxMove: { basePower: 130 },
  contestType: 'Cool',
  desc: "Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.",
  shortDesc: 'OHKOs the target. Fails if user is a lower level.',
  id: 'guillotine',
  fullname: 'move: Guillotine',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Gust',
  num: 16,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { protect: 1, mirror: 1, distance: 1, metronome: 1, wind: 1 },
  secondary: null,
  target: 'any',
  type: 'Flying',
  contestType: 'Clever',
  desc: 'Power doubles if the target is using Bounce or Fly.',
  shortDesc: 'Power doubles during Bounce and Fly.',
  id: 'gust',
  fullname: 'move: Gust',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Harden',
  num: 106,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { def: 1 },
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { def: 1 } },
  contestType: 'Tough',
  desc: "Raises the user's Defense by 1 stage.",
  shortDesc: "Raises the user's Defense by 1.",
  id: 'harden',
  fullname: 'move: Harden',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Haze',
  num: 114,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { bypasssub: 1, metronome: 1 },
  onHitField: [Function: onHitField],
  secondary: null,
  target: 'all',
  type: 'Ice',
  zMove: { effect: 'heal' },
  contestType: 'Beautiful',
  desc: 'Resets the stat stages of all active Pokemon to 0.',
  shortDesc: 'Eliminates all stat changes.',
  id: 'haze',
  fullname: 'move: Haze',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Headbutt',
  num: 29,
  accuracy: 100,
  basePower: 70,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'Has a 30% chance to make the target flinch.',
  shortDesc: '30% chance to make the target flinch.',
  id: 'headbutt',
  fullname: 'move: Headbutt',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Helping Hand',
  num: 270,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 5,
  flags: { bypasssub: 1, noassist: 1, failcopycat: 1 },
  volatileStatus: 'helpinghand',
  onTryHit: [Function: onTryHit],
  condition: {
    duration: 1,
    onStart: [Function: onStart],
    onRestart: [Function: onRestart],
    onBasePowerPriority: 10,
    onBasePower: [Function: onBasePower]
  },
  secondary: null,
  target: 'adjacentAlly',
  type: 'Normal',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Clever',
  desc: "The power of the target's attack this turn is multiplied by 1.5 (this effect is stackable). Fails if there is no ally adjacent to the user or if the ally already moved this turn, but does not fail if the ally is using a two-turn move.",
  shortDesc: "One adjacent ally's move power is 1.5x this turn.",
  id: 'helpinghand',
  fullname: 'move: Helping Hand',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false
},
DataMove {
  exists: true,
  name: 'Horn Attack',
  num: 30,
  accuracy: 100,
  basePower: 65,
  category: 'Physical',
  pp: 25,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'hornattack',
  fullname: 'move: Horn Attack',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Horn Drill',
  num: 32,
  accuracy: 30,
  basePower: 0,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  ohko: true,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { basePower: 180 },
  maxMove: { basePower: 130 },
  contestType: 'Cool',
  desc: "Deals damage to the target equal to the target's maximum HP. Ignores accuracy and evasiveness modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Sturdy Ability are immune.",
  shortDesc: 'OHKOs the target. Fails if user is a lower level.',
  id: 'horndrill',
  fullname: 'move: Horn Drill',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Hydro Cannon',
  num: 308,
  accuracy: 90,
  basePower: 150,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { recharge: 1, protect: 1, mirror: 1, metronome: 1 },
  self: { volatileStatus: 'mustrecharge' },
  secondary: null,
  target: 'normal',
  type: 'Water',
  contestType: 'Beautiful',
  desc: 'If this move is successful, the user must recharge on the following turn and cannot select a move.',
  shortDesc: 'User cannot move next turn.',
  id: 'hydrocannon',
  fullname: 'move: Hydro Cannon',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Hyper Beam',
  num: 63,
  accuracy: 90,
  basePower: 150,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { recharge: 1, protect: 1, mirror: 1, metronome: 1 },
  self: { volatileStatus: 'mustrecharge' },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'If this move is successful, the user must recharge on the following turn and cannot select a move.',
  shortDesc: 'User cannot move next turn.',
  id: 'hyperbeam',
  fullname: 'move: Hyper Beam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Ice Punch',
  num: 8,
  accuracy: 100,
  basePower: 75,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: { chance: 10, status: 'frz' },
  target: 'normal',
  type: 'Ice',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to freeze the target.',
  shortDesc: '10% chance to freeze the target.',
  id: 'icepunch',
  fullname: 'move: Ice Punch',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: [ { chance: 10, status: 'frz' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Icy Wind',
  num: 196,
  accuracy: 95,
  basePower: 55,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, wind: 1 },
  secondary: { chance: 100, boosts: { spe: -1 } },
  target: 'allAdjacentFoes',
  type: 'Ice',
  contestType: 'Beautiful',
  desc: "Has a 100% chance to lower the target's Speed by 1 stage.",
  shortDesc: '100% chance to lower the foe(s) Speed by 1.',
  id: 'icywind',
  fullname: 'move: Icy Wind',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: [ { chance: 100, boosts: { spe: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Iron Defense',
  num: 334,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { def: 2 },
  secondary: null,
  target: 'self',
  type: 'Steel',
  zMove: { effect: 'clearnegativeboost' },
  contestType: 'Tough',
  desc: "Raises the user's Defense by 2 stages.",
  shortDesc: "Raises the user's Defense by 2.",
  id: 'irondefense',
  fullname: 'move: Iron Defense',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Steel',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Iron Tail',
  num: 231,
  accuracy: 75,
  basePower: 100,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, boosts: { def: -1 } },
  target: 'normal',
  type: 'Steel',
  contestType: 'Cool',
  desc: "Has a 30% chance to lower the target's Defense by 1 stage.",
  shortDesc: "30% chance to lower the target's Defense by 1.",
  id: 'irontail',
  fullname: 'move: Iron Tail',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Steel',
  secondaries: [ { chance: 30, boosts: { def: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Leer',
  num: 43,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  boosts: { def: -1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Normal',
  zMove: { boost: { atk: 1 } },
  contestType: 'Cool',
  desc: "Lowers the target's Defense by 1 stage.",
  shortDesc: 'Lowers the foe(s) Defense by 1.',
  id: 'leer',
  fullname: 'move: Leer',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Mach Punch',
  num: 183,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 30,
  priority: 1,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'Usually goes first.',
  id: 'machpunch',
  fullname: 'move: Mach Punch',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 70 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Magical Leaf',
  num: 345,
  accuracy: true,
  basePower: 60,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Grass',
  contestType: 'Beautiful',
  desc: 'This move does not check accuracy.',
  shortDesc: 'This move does not check accuracy.',
  id: 'magicalleaf',
  fullname: 'move: Magical Leaf',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Megahorn',
  num: 224,
  accuracy: 85,
  basePower: 120,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Bug',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'megahorn',
  fullname: 'move: Megahorn',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Bug',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Mega Kick',
  num: 25,
  accuracy: 75,
  basePower: 120,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'megakick',
  fullname: 'move: Mega Kick',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Mega Punch',
  num: 5,
  accuracy: 85,
  basePower: 80,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'megapunch',
  fullname: 'move: Mega Punch',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Metal Claw',
  num: 232,
  accuracy: 95,
  basePower: 50,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, self: { boosts: { atk: 1 } } },
  target: 'normal',
  type: 'Steel',
  contestType: 'Cool',
  desc: "Has a 10% chance to raise the user's Attack by 1 stage.",
  shortDesc: "10% chance to raise the user's Attack by 1.",
  id: 'metalclaw',
  fullname: 'move: Metal Claw',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Steel',
  secondaries: [
    { chance: 10, self: { boosts: { atk: 1 } } }
  ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Mud Shot',
  num: 341,
  accuracy: 95,
  basePower: 55,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 100, boosts: { spe: -1 } },
  target: 'normal',
  type: 'Ground',
  contestType: 'Tough',
  desc: "Has a 100% chance to lower the target's Speed by 1 stage.",
  shortDesc: "100% chance to lower the target's Speed by 1.",
  id: 'mudshot',
  fullname: 'move: Mud Shot',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: [ { chance: 100, boosts: { spe: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Mud-Slap',
  num: 189,
  accuracy: 100,
  basePower: 20,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 100, boosts: { accuracy: -1 } },
  target: 'normal',
  type: 'Ground',
  contestType: 'Cute',
  desc: "Has a 100% chance to lower the target's accuracy by 1 stage.",
  shortDesc: "100% chance to lower the target's accuracy by 1.",
  id: 'mudslap',
  fullname: 'move: Mud-Slap',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: [ { chance: 100, boosts: { accuracy: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Night Shade',
  num: 101,
  accuracy: 100,
  basePower: 0,
  damage: 'level',
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Ghost',
  contestType: 'Clever',
  desc: "Deals damage to the target equal to the user's level.",
  shortDesc: "Does damage equal to the user's level.",
  id: 'nightshade',
  fullname: 'move: Night Shade',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Pain Split',
  num: 220,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, allyanim: 1, metronome: 1 },
  onHit: [Function: onHit],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { def: 1 } },
  contestType: 'Clever',
  desc: "The user and the target's HP become the average of their current HP, rounded down, but not more than the maximum HP of either one.",
  shortDesc: 'Shares HP of user and target equally.',
  id: 'painsplit',
  fullname: 'move: Pain Split',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Peck',
  num: 64,
  accuracy: 100,
  basePower: 35,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, distance: 1, metronome: 1 },
  secondary: null,
  target: 'any',
  type: 'Flying',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'peck',
  fullname: 'move: Peck',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Poison Sting',
  num: 40,
  accuracy: 100,
  basePower: 15,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, status: 'psn' },
  target: 'normal',
  type: 'Poison',
  contestType: 'Clever',
  desc: 'Has a 30% chance to poison the target.',
  shortDesc: '30% chance to poison the target.',
  id: 'poisonsting',
  fullname: 'move: Poison Sting',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: [ { chance: 30, status: 'psn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 70 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Poison Tail',
  num: 342,
  accuracy: 100,
  basePower: 50,
  category: 'Physical',
  pp: 25,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  critRatio: 2,
  secondary: { chance: 10, status: 'psn' },
  target: 'normal',
  type: 'Poison',
  contestType: 'Clever',
  desc: 'Has a 10% chance to poison the target and a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio. 10% chance to poison.',
  id: 'poisontail',
  fullname: 'move: Poison Tail',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Poison',
  secondaries: [ { chance: 10, status: 'psn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 75 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Pound',
  num: 1,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'pound',
  fullname: 'move: Pound',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Powder Snow',
  num: 181,
  accuracy: 100,
  basePower: 40,
  category: 'Special',
  pp: 25,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, status: 'frz' },
  target: 'allAdjacentFoes',
  type: 'Ice',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to freeze the target.',
  shortDesc: '10% chance to freeze the foe(s).',
  id: 'powdersnow',
  fullname: 'move: Powder Snow',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ice',
  secondaries: [ { chance: 10, status: 'frz' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Present',
  num: 217,
  accuracy: 90,
  basePower: 0,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  onModifyMove: [Function: onModifyMove],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cute',
  desc: 'If this move is successful, it deals damage or heals the target. 40% chance for 40 power, 30% chance for 80 power, 10% chance for 120 power, and 20% chance to heal the target by 1/4 of its maximum HP, rounded down.',
  shortDesc: '40, 80, 120 power, or heals target 1/4 max HP.',
  id: 'present',
  fullname: 'move: Present',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Psybeam',
  num: 60,
  accuracy: 100,
  basePower: 65,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, volatileStatus: 'confusion' },
  target: 'normal',
  type: 'Psychic',
  contestType: 'Beautiful',
  desc: 'Has a 10% chance to confuse the target.',
  shortDesc: '10% chance to confuse the target.',
  id: 'psybeam',
  fullname: 'move: Psybeam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: [ { chance: 10, volatileStatus: 'confusion' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Psychic',
  num: 94,
  accuracy: 100,
  basePower: 90,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, boosts: { spd: -1 } },
  target: 'normal',
  type: 'Psychic',
  contestType: 'Clever',
  desc: "Has a 10% chance to lower the target's Special Defense by 1 stage.",
  shortDesc: "10% chance to lower the target's Sp. Def by 1.",
  id: 'psychic',
  fullname: 'move: Psychic',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Psychic',
  secondaries: [ { chance: 10, boosts: { spd: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Quick Attack',
  num: 98,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 30,
  priority: 1,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'Usually goes first.',
  id: 'quickattack',
  fullname: 'move: Quick Attack',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Rain Dance',
  num: 240,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { metronome: 1 },
  weather: 'RainDance',
  secondary: null,
  target: 'all',
  type: 'Water',
  zMove: { boost: { spe: 1 } },
  contestType: 'Beautiful',
  desc: 'For 5 turns, the weather becomes Rain Dance. The damage of Water-type attacks is multiplied by 1.5 and the damage of Fire-type attacks is multiplied by 0.5 during the effect. Fails if the current weather is Rain Dance.',
  shortDesc: 'For 5 turns, heavy rain powers Water moves.',
  id: 'raindance',
  fullname: 'move: Rain Dance',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Razor Leaf',
  num: 75,
  accuracy: 95,
  basePower: 55,
  category: 'Special',
  pp: 25,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, slicing: 1 },
  critRatio: 2,
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Grass',
  contestType: 'Cool',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio. Hits adjacent foes.',
  id: 'razorleaf',
  fullname: 'move: Razor Leaf',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Rock Slide',
  num: 157,
  accuracy: 90,
  basePower: 75,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'allAdjacentFoes',
  type: 'Rock',
  contestType: 'Tough',
  desc: 'Has a 30% chance to make the target flinch.',
  shortDesc: '30% chance to make the foe(s) flinch.',
  id: 'rockslide',
  fullname: 'move: Rock Slide',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Rock',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Rock Throw',
  num: 88,
  accuracy: 90,
  basePower: 50,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Rock',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'rockthrow',
  fullname: 'move: Rock Throw',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Rock',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Rollout',
  num: 205,
  accuracy: 90,
  basePower: 30,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: {
    contact: 1,
    protect: 1,
    mirror: 1,
    metronome: 1,
    failinstruct: 1,
    noparentalbond: 1
  },
  onModifyMove: [Function: onModifyMove],
  onAfterMove: [Function: onAfterMove],
  condition: {
    duration: 1,
    onLockMove: 'rollout',
    onStart: [Function: onStart],
    onResidual: [Function: onResidual]
  },
  secondary: null,
  target: 'normal',
  type: 'Rock',
  contestType: 'Cute',
  desc: 'If this move is successful, the user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn.',
  shortDesc: 'Power doubles with each hit. Repeats for 5 turns.',
  id: 'rollout',
  fullname: 'move: Rollout',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Rock',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Sacred Fire',
  num: 221,
  accuracy: 95,
  basePower: 100,
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, defrost: 1, metronome: 1 },
  secondary: { chance: 50, status: 'brn' },
  target: 'normal',
  type: 'Fire',
  contestType: 'Beautiful',
  desc: 'Has a 50% chance to burn the target.',
  shortDesc: '50% chance to burn the target. Thaws user.',
  id: 'sacredfire',
  fullname: 'move: Sacred Fire',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: [ { chance: 50, status: 'brn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 180 }
},
DataMove {
  exists: true,
  name: 'Sand Attack',
  num: 28,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 15,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  boosts: { accuracy: -1 },
  secondary: null,
  target: 'normal',
  type: 'Ground',
  zMove: { boost: { evasion: 1 } },
  contestType: 'Cute',
  desc: "Lowers the target's accuracy by 1 stage.",
  shortDesc: "Lowers the target's accuracy by 1.",
  id: 'sandattack',
  fullname: 'move: Sand Attack',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ground',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Sandstorm',
  num: 201,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 10,
  priority: 0,
  flags: { metronome: 1, wind: 1 },
  weather: 'Sandstorm',
  secondary: null,
  target: 'all',
  type: 'Rock',
  zMove: { boost: { spe: 1 } },
  contestType: 'Tough',
  desc: 'For 5 turns, the weather becomes Sandstorm. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are a Ground, Rock, or Steel type, or have the Sand Veil Ability. Fails if the current weather is Sandstorm.',
  shortDesc: 'For 5 turns, a sandstorm rages.',
  id: 'sandstorm',
  fullname: 'move: Sandstorm',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Rock',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Scratch',
  num: 10,
  accuracy: 100,
  basePower: 40,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'scratch',
  fullname: 'move: Scratch',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Seismic Toss',
  num: 69,
  accuracy: 100,
  basePower: 0,
  damage: 'level',
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  maxMove: { basePower: 75 },
  contestType: 'Tough',
  desc: "Deals damage to the target equal to the user's level.",
  shortDesc: "Does damage equal to the user's level.",
  id: 'seismictoss',
  fullname: 'move: Seismic Toss',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Self-Destruct',
  num: 120,
  accuracy: 100,
  basePower: 200,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, noparentalbond: 1 },
  selfdestruct: 'always',
  secondary: null,
  target: 'allAdjacent',
  type: 'Normal',
  contestType: 'Beautiful',
  desc: "The user faints after using this move. The target's Defense is halved during damage calculation. This move is prevented from executing if any active Pokemon has the Damp Ability.",
  shortDesc: "Target's Def halved during damage. User faints.",
  id: 'selfdestruct',
  fullname: 'move: Self-Destruct',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Shadow Ball',
  num: 247,
  accuracy: 100,
  basePower: 80,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  secondary: { chance: 20, boosts: { spd: -1 } },
  target: 'normal',
  type: 'Ghost',
  contestType: 'Clever',
  desc: "Has a 20% chance to lower the target's Special Defense by 1 stage.",
  shortDesc: "20% chance to lower the target's Sp. Def by 1.",
  id: 'shadowball',
  fullname: 'move: Shadow Ball',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: [ { chance: 20, boosts: { spd: -1 } } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Shadow Punch',
  num: 325,
  accuracy: true,
  basePower: 60,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Ghost',
  contestType: 'Clever',
  desc: 'This move does not check accuracy.',
  shortDesc: 'This move does not check accuracy.',
  id: 'shadowpunch',
  fullname: 'move: Shadow Punch',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Ghost',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Shock Wave',
  num: 351,
  accuracy: true,
  basePower: 60,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: 'This move does not check accuracy.',
  shortDesc: 'This move does not check accuracy.',
  id: 'shockwave',
  fullname: 'move: Shock Wave',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Sky Attack',
  num: 143,
  accuracy: 90,
  basePower: 140,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: {
    charge: 1,
    protect: 1,
    mirror: 1,
    distance: 1,
    metronome: 1,
    nosleeptalk: 1,
    failinstruct: 1
  },
  critRatio: 2,
  onTryMove: [Function: onTryMove],
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'any',
  type: 'Flying',
  contestType: 'Cool',
  desc: 'Has a 30% chance to make the target flinch and a higher chance for a critical hit. This attack charges on the first turn and executes on the second.',
  shortDesc: 'Charges, then hits turn 2. 30% flinch. High crit.',
  id: 'skyattack',
  fullname: 'move: Sky Attack',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Flying',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Slam',
  num: 21,
  accuracy: 75,
  basePower: 80,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'slam',
  fullname: 'move: Slam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Slash',
  num: 163,
  accuracy: 100,
  basePower: 70,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1, slicing: 1 },
  critRatio: 2,
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'Has a higher chance for a critical hit.',
  shortDesc: 'High critical hit ratio.',
  id: 'slash',
  fullname: 'move: Slash',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Sludge',
  num: 124,
  accuracy: 100,
  basePower: 65,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, status: 'psn' },
  target: 'normal',
  type: 'Poison',
  contestType: 'Tough',
  desc: 'Has a 30% chance to poison the target.',
  shortDesc: '30% chance to poison the target.',
  id: 'sludge',
  fullname: 'move: Sludge',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: [ { chance: 30, status: 'psn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 85 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Sludge Bomb',
  num: 188,
  accuracy: 100,
  basePower: 90,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, bullet: 1 },
  secondary: { chance: 30, status: 'psn' },
  target: 'normal',
  type: 'Poison',
  contestType: 'Tough',
  desc: 'Has a 30% chance to poison the target.',
  shortDesc: '30% chance to poison the target.',
  id: 'sludgebomb',
  fullname: 'move: Sludge Bomb',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Poison',
  secondaries: [ { chance: 30, status: 'psn' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Smokescreen',
  num: 108,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 20,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  boosts: { accuracy: -1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  zMove: { boost: { evasion: 1 } },
  contestType: 'Clever',
  desc: "Lowers the target's accuracy by 1 stage.",
  shortDesc: "Lowers the target's accuracy by 1.",
  id: 'smokescreen',
  fullname: 'move: Smokescreen',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Solar Beam',
  num: 76,
  accuracy: 100,
  basePower: 120,
  category: 'Special',
  pp: 10,
  priority: 0,
  flags: {
    charge: 1,
    protect: 1,
    mirror: 1,
    metronome: 1,
    nosleeptalk: 1,
    failinstruct: 1
  },
  onTryMove: [Function: onTryMove],
  onBasePower: [Function: onBasePower],
  secondary: null,
  target: 'normal',
  type: 'Grass',
  contestType: 'Cool',
  desc: 'This attack charges on the first turn and executes on the second. Damage is halved if the weather is Hail, Rain Dance, or Sandstorm. If the weather is Sunny Day, the move completes in one turn.',
  shortDesc: 'Charges turn 1. Hits turn 2. No charge in sunlight.',
  id: 'solarbeam',
  fullname: 'move: Solar Beam',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Grass',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 140 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Spark',
  num: 209,
  accuracy: 100,
  basePower: 65,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 30, status: 'par' },
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: 'Has a 30% chance to paralyze the target.',
  shortDesc: '30% chance to paralyze the target.',
  id: 'spark',
  fullname: 'move: Spark',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: [ { chance: 30, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Spit Up',
  num: 255,
  accuracy: 100,
  basePower: 0,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, metronome: 1 },
  onTry: [Function: onTry],
  onAfterMove: [Function: onAfterMove],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: "Damage is multiplied by the user's Stockpile count. This move does not apply damage variance and cannot be a critical hit. Fails if the user's Stockpile count is 0. Unless this move misses, the user's Stockpile count resets to 0.",
  shortDesc: 'More power with more uses of Stockpile.',
  id: 'spitup',
  fullname: 'move: Spit Up',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Splash',
  num: 150,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { gravity: 1, metronome: 1 },
  onTry: [Function: onTry],
  onTryHit: [Function: onTryHit],
  secondary: null,
  target: 'self',
  type: 'Normal',
  zMove: { boost: { atk: 3 } },
  contestType: 'Cute',
  desc: 'No competitive use.',
  shortDesc: 'No competitive use.',
  id: 'splash',
  fullname: 'move: Splash',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Steel Wing',
  num: 211,
  accuracy: 90,
  basePower: 70,
  category: 'Physical',
  pp: 25,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, self: { boosts: { def: 1 } } },
  target: 'normal',
  type: 'Steel',
  contestType: 'Cool',
  desc: "Has a 10% chance to raise the user's Defense by 1 stage.",
  shortDesc: "10% chance to raise the user's Defense by 1.",
  id: 'steelwing',
  fullname: 'move: Steel Wing',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Steel',
  secondaries: [
    { chance: 10, self: { boosts: { def: 1 } } }
  ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Stomp',
  num: 23,
  accuracy: 100,
  basePower: 65,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, nonsky: 1, metronome: 1 },
  secondary: { chance: 30, volatileStatus: 'flinch' },
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'Has a 30% chance to make the target flinch. Damage doubles if the target has used Minimize while active.',
  shortDesc: '30% chance to make the target flinch.',
  id: 'stomp',
  fullname: 'move: Stomp',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 30, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 120 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Strength',
  num: 70,
  accuracy: 100,
  basePower: 80,
  category: 'Physical',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'strength',
  fullname: 'move: Strength',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Sunny Day',
  num: 241,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 5,
  priority: 0,
  flags: { metronome: 1 },
  weather: 'sunnyday',
  secondary: null,
  target: 'all',
  type: 'Fire',
  zMove: { boost: { spe: 1 } },
  contestType: 'Beautiful',
  desc: 'For 5 turns, the weather becomes Sunny Day. The damage of Fire-type attacks is multiplied by 1.5 and the damage of Water-type attacks is multiplied by 0.5 during the effect. Fails if the current weather is Sunny Day.',
  shortDesc: 'For 5 turns, intense sunlight powers Fire moves.',
  id: 'sunnyday',
  fullname: 'move: Sunny Day',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fire',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Super Fang',
  num: 162,
  accuracy: 90,
  basePower: 0,
  damageCallback: [Function: damageCallback],
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'Deals damage to the target equal to half of its current HP, rounded down, but not less than 1 HP.',
  shortDesc: "Does damage equal to 1/2 target's current HP.",
  id: 'superfang',
  fullname: 'move: Super Fang',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 100 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Superpower',
  num: 276,
  accuracy: 100,
  basePower: 120,
  category: 'Physical',
  pp: 5,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  self: { boosts: { atk: -1, def: -1 } },
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  contestType: 'Tough',
  desc: "Lowers the user's Attack and Defense by 1 stage.",
  shortDesc: "Lowers the user's Attack and Defense by 1.",
  id: 'superpower',
  fullname: 'move: Superpower',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 95 },
  zMove: { basePower: 190 }
},
DataMove {
  exists: true,
  name: 'Swift',
  num: 129,
  accuracy: true,
  basePower: 60,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Normal',
  contestType: 'Cool',
  desc: 'This move does not check accuracy.',
  shortDesc: 'This move does not check accuracy. Hits foes.',
  id: 'swift',
  fullname: 'move: Swift',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Tail Whip',
  num: 39,
  accuracy: 100,
  basePower: 0,
  category: 'Status',
  pp: 30,
  priority: 0,
  flags: { protect: 1, reflectable: 1, mirror: 1, metronome: 1 },
  boosts: { def: -1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Normal',
  zMove: { boost: { atk: 1 } },
  contestType: 'Cute',
  desc: "Lowers the target's Defense by 1 stage.",
  shortDesc: 'Lowers the foe(s) Defense by 1.',
  id: 'tailwhip',
  fullname: 'move: Tail Whip',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Take Down',
  num: 36,
  accuracy: 85,
  basePower: 90,
  category: 'Physical',
  pp: 20,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  recoil: [ 1, 4 ],
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'If the target lost HP, the user takes recoil damage equal to 1/4 the HP lost by the target, rounded down, but not less than 1 HP.',
  shortDesc: 'Has 1/4 recoil.',
  id: 'takedown',
  fullname: 'move: Take Down',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 175 }
},
DataMove {
  exists: true,
  name: 'Thunder Punch',
  num: 9,
  accuracy: 100,
  basePower: 75,
  category: 'Special',
  pp: 15,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, punch: 1, metronome: 1 },
  secondary: { chance: 10, status: 'par' },
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: 'Has a 10% chance to paralyze the target.',
  shortDesc: '10% chance to paralyze the target.',
  id: 'thunderpunch',
  fullname: 'move: Thunder Punch',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: [ { chance: 10, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 140 }
},
DataMove {
  exists: true,
  name: 'Thunder Shock',
  num: 84,
  accuracy: 100,
  basePower: 40,
  category: 'Special',
  pp: 30,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 10, status: 'par' },
  target: 'normal',
  type: 'Electric',
  contestType: 'Cool',
  desc: 'Has a 10% chance to paralyze the target.',
  shortDesc: '10% chance to paralyze the target.',
  id: 'thundershock',
  fullname: 'move: Thunder Shock',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Electric',
  secondaries: [ { chance: 10, status: 'par' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Tri Attack',
  num: 161,
  accuracy: 100,
  basePower: 80,
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: { chance: 20, onHit: [Function: onHit] },
  target: 'normal',
  type: 'Normal',
  contestType: 'Beautiful',
  desc: 'Has a 20% chance to either burn, freeze, or paralyze the target.',
  shortDesc: '20% chance to paralyze or burn or freeze target.',
  id: 'triattack',
  fullname: 'move: Tri Attack',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: [ { chance: 20, onHit: [Function: onHit] } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 130 },
  zMove: { basePower: 160 }
},
DataMove {
  exists: true,
  name: 'Triple Kick',
  num: 167,
  accuracy: 90,
  basePower: 10,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Physical',
  pp: 10,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  multihit: 3,
  multiaccuracy: true,
  secondary: null,
  target: 'normal',
  type: 'Fighting',
  zMove: { basePower: 120 },
  maxMove: { basePower: 80 },
  contestType: 'Cool',
  desc: "Hits three times. Power increases to 20 for the second hit and 30 for the third. This move checks accuracy for each hit, and the attack ends if the target avoids a hit. If one of the hits breaks the target's substitute, it will take damage for the remaining hits.",
  shortDesc: 'Hits 3 times. Each hit can miss, but power rises.',
  id: 'triplekick',
  fullname: 'move: Triple Kick',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Fighting',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
},
DataMove {
  exists: true,
  name: 'Twister',
  num: 239,
  accuracy: 100,
  basePower: 40,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1, wind: 1 },
  secondary: { chance: 20, volatileStatus: 'flinch' },
  target: 'allAdjacentFoes',
  type: 'Dragon',
  contestType: 'Cool',
  desc: 'Has a 20% chance to make the target flinch. Power doubles if the target is using Bounce or Fly.',
  shortDesc: '20% chance to make the foe(s) flinch.',
  id: 'twister',
  fullname: 'move: Twister',
  effectType: 'Move',
  gen: 2,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Dragon',
  secondaries: [ { chance: 20, volatileStatus: 'flinch' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Vise Grip',
  num: 11,
  accuracy: 100,
  basePower: 55,
  category: 'Physical',
  pp: 30,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Normal',
  contestType: 'Tough',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'visegrip',
  fullname: 'move: Vise Grip',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Normal',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Water Gun',
  num: 55,
  accuracy: 100,
  basePower: 40,
  category: 'Special',
  pp: 25,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'normal',
  type: 'Water',
  contestType: 'Cute',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'watergun',
  fullname: 'move: Water Gun',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 90 },
  zMove: { basePower: 100 }
},
DataMove {
  exists: true,
  name: 'Water Pulse',
  num: 352,
  accuracy: 100,
  basePower: 60,
  category: 'Special',
  pp: 20,
  priority: 0,
  flags: { protect: 1, mirror: 1, distance: 1, metronome: 1, pulse: 1 },
  secondary: { chance: 20, volatileStatus: 'confusion' },
  target: 'any',
  type: 'Water',
  contestType: 'Beautiful',
  desc: 'Has a 20% chance to confuse the target.',
  shortDesc: '20% chance to confuse the target.',
  id: 'waterpulse',
  fullname: 'move: Water Pulse',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: [ { chance: 20, volatileStatus: 'confusion' } ],
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Water Spout',
  num: 323,
  accuracy: 100,
  basePower: 150,
  basePowerCallback: [Function: basePowerCallback],
  category: 'Special',
  pp: 5,
  priority: 0,
  flags: { protect: 1, mirror: 1, metronome: 1 },
  secondary: null,
  target: 'allAdjacentFoes',
  type: 'Water',
  contestType: 'Beautiful',
  desc: "Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.",
  shortDesc: "Less power as user's HP decreases. Hits foe(s).",
  id: 'waterspout',
  fullname: 'move: Water Spout',
  effectType: 'Move',
  gen: 3,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 150 },
  zMove: { basePower: 200 }
},
DataMove {
  exists: true,
  name: 'Wing Attack',
  num: 17,
  accuracy: 100,
  basePower: 60,
  category: 'Physical',
  pp: 35,
  priority: 0,
  flags: { contact: 1, protect: 1, mirror: 1, distance: 1, metronome: 1 },
  secondary: null,
  target: 'any',
  type: 'Flying',
  contestType: 'Cool',
  desc: 'No additional effect.',
  shortDesc: 'No additional effect.',
  id: 'wingattack',
  fullname: 'move: Wing Attack',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Flying',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: false,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined,
  maxMove: { basePower: 110 },
  zMove: { basePower: 120 }
},
DataMove {
  exists: true,
  name: 'Withdraw',
  num: 110,
  accuracy: true,
  basePower: 0,
  category: 'Status',
  pp: 40,
  priority: 0,
  flags: { snatch: 1, metronome: 1 },
  boosts: { def: 1 },
  secondary: null,
  target: 'self',
  type: 'Water',
  zMove: { boost: { def: 1 } },
  contestType: 'Cute',
  desc: "Raises the user's Defense by 1 stage.",
  shortDesc: "Raises the user's Defense by 1.",
  id: 'withdraw',
  fullname: 'move: Withdraw',
  effectType: 'Move',
  gen: 1,
  isNonstandard: null,
  duration: undefined,
  noCopy: false,
  affectsFainted: false,
  status: undefined,
  weather: undefined,
  sourceEffect: '',
  critRatio: 1,
  baseMoveType: 'Water',
  secondaries: null,
  hasSheerForce: false,
  overrideOffensiveStat: undefined,
  overrideOffensivePokemon: undefined,
  overrideDefensiveStat: undefined,
  overrideDefensivePokemon: undefined,
  ignoreNegativeOffensive: false,
  ignorePositiveDefensive: false,
  ignoreOffensive: false,
  ignoreDefensive: false,
  ignoreImmunity: true,
  noPPBoosts: false,
  isZ: false,
  isMax: false,
  selfSwitch: undefined,
  pressureTarget: '',
  nonGhostTarget: '',
  ignoreAbility: false,
  damage: undefined,
  spreadHit: false,
  forceSTAB: false,
  volatileStatus: undefined
}